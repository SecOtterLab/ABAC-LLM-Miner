rule(position [ {registrar}; student = student, departments ] departments, type [ {transcript}; {read}; ])
rule(position [ {csChair}; student = student, departments [ {cs}; {read}; ])
rule(position [ {eeChair}; student = student, departments [ {ee}; {read}; ])
rule(position [ {student}, department [ {cs}; departments ] {cs}, type [ {gradebook}; {readScore}; ])
rule(position [ {student}, department [ {ee}; departments ] {ee}, type [ {gradebook}; {readScore}; ])
rule(position [ {faculty}, department [ {ee}; type [ {gradebook}, crs ] crsTaught; {readScore, assignGrade, addScore, changeScore}; ])
rule(position [ {faculty}, department [ {cs}; type [ {gradebook}, crs ] crsTaught; {readScore, assignGrade, addScore, changeScore}; ])
rule(position [ {student}; student = student, type [ {transcript}; {read}; ])
rule(position [ {student}; student = student, type [ {application}; {checkStatus}; ])
rule(position [ {staff}, department [ {admissions}; type [ {application}; {read, setStatus}; ])
rule(position [ {staff}, department [ {registrar}; type [ {roster}; {write, read}; ])
rule(position [ {student}, department [ {cs}; type [ {gradebook}, crs ] crsTaken; {readMyScores}; ])
rule(position [ {student}, department [ {ee}; type [ {gradebook}, crs ] crsTaken; {readMyScores}; ])
rule(position [ {applicant}; student = student, type [ {application}; {checkStatus}; ])
rule(position [ {student}; student = student, type [ {application}; {checkStatus}; ])
rule(position [ {student}, crsTaught ] crs; type [ {gradebook}; {addScore, readScore}; crs = crs])
