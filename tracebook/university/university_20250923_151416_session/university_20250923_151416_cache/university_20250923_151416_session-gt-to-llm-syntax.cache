
===============================================================
ITERATION : 1
===============================================================
rule(; type [ {gradebook}; {readMyScores}; crsTaken ] crs) : ('rule(position [ {faculty}, crsTaught ] crs; type [ {gradebook}; acts={readScore,addScore,changeScore,assignGrade}; departments = departments, crs = crs)', 0.2916666666666667)
rule(; type [ {gradebook}; {addScore readScore}; crsTaught ] crs;) : ('rule(position [ {student}, crsTaken ] crs; type [ {gradebook}; acts={readScore,readMyScores}; departments = departments, crs = crs)', 0.375)
rule(position [ {faculty}; type [ {gradebook}; {changeScore assignGrade}; crsTaught ] crs) : ('rule(position [ {faculty}, crsTaught ] crs; type [ {gradebook}; acts={readScore,addScore,changeScore,assignGrade}; departments = departments, crs = crs)', 0.5416666666666666)
rule(department [ {registrar}; type [ {roster}; {read write}; ) : ('rule(position [ {faculty}; type [ {roster}; acts={read,write}; departments = departments, crs = crs)', 0.41666666666666663)
rule(position [ {faculty}; type [ {roster}; {read}; crsTaught ] crs) : ('rule(position [ {faculty}; type [ {roster}; acts={read,write}; departments = departments, crs = crs)', 0.5416666666666666)
rule(; type [ {transcript}; {read}; uid=student) : ('rule(position [ {registrar}; type [ {transcript}; acts={read}; departments = departments)', 0.25)
rule(isChair [ {True}; type [ {transcript}; {read}; department [ departments) : ('rule(position [ {faculty}, isChair [ {True}; type [ {transcript}; acts={read}; departments = departments)', 0.49999999999999994)
rule(department [ {registrar}; type [ {transcript}; {read}; ) : ('rule(position [ {registrar}; type [ {transcript}; acts={read}; departments = departments)', 0.41666666666666663)
rule(; type [ {application}; {checkStatus}; uid=student) : ('rule(position [ {admissions}; type [ {application}; acts={read,setStatus}; student = student)', 0.25)
rule(department [ {admissions}; type [ {application}; {read setStatus}; ) : ('rule(position [ {admissions}; type [ {application}; acts={read,setStatus}; student = student)', 0.49999999999999994)

===============================================================
ITERATION : 0
===============================================================
rule(; type [ {gradebook}; {readMyScores}; crsTaken ] crs) : ('rule(position [ {student}; crsTaken ] crs, type [ {gradebook}; {readScore, readMyScores};)', 0.25)
rule(; type [ {gradebook}; {addScore readScore}; crsTaught ] crs;) : ('rule(position [ {faculty}; crsTaught ] crs, type [ {gradebook}; {addScore, changeScore, assignGrade, readScore};)', 0.25)
rule(position [ {faculty}; type [ {gradebook}; {changeScore assignGrade}; crsTaught ] crs) : ('rule(position [ {faculty}; crsTaught ] crs, type [ {gradebook}; {addScore, changeScore, assignGrade, readScore};)', 0.5)
rule(department [ {registrar}; type [ {roster}; {read write}; ) : ('rule(position [ {staff}, department [ {registrar}; type [ {roster}; {read, write};)', 0.9166666666666666)
rule(position [ {faculty}; type [ {roster}; {read}; crsTaught ] crs) : ('rule(position [ {faculty}; crsTaught ] crs, type [ {roster}; {read};)', 0.625)
rule(; type [ {transcript}; {read}; uid=student) : ('rule(position [ {student}; student = uid, type [ {transcript}; {read};)', 0.375)
rule(isChair [ {True}; type [ {transcript}; {read}; department [ departments) : ('rule(position [ {student}; student = uid, type [ {transcript}; {read};)', 0.4583333333333333)
rule(department [ {registrar}; type [ {transcript}; {read}; ) : ('rule(position [ {registrar}; student = student, type [ {transcript}, departments ] departments; {read};)', 0.75)
rule(; type [ {application}; {checkStatus}; uid=student) : ('rule(position [ {applicant}; type [ {application}; {checkStatus};)', 0.5)
rule(department [ {admissions}; type [ {application}; {read setStatus}; ) : ('rule(position [ {staff}, department [ {admissions}; type [ {application}; {read, setStatus};)', 0.9166666666666666)
