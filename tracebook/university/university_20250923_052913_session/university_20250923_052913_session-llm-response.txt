rule(position [ {registrar}; student = student, type [ {transcript}; read)
rule(position [ {csChair}; student = student, departments [ {cs}, type [ {transcript}; read)
rule(position [ {eeChair}; student = student, departments [ {ee}, type [ {transcript}; read)
rule(position [ {student}, department [ {cs}; crs = crs, type [ {gradebook}; readScore)
rule(position [ {student}, department [ {cs}; crs = crs, type [ {gradebook}; readMyScores)
rule(position [ {student}, department [ {ee}; crs = crs, type [ {gradebook}; addScore)
rule(position [ {student}, department [ {ee}; crs = crs, type [ {gradebook}; readMyScores)
rule(position [ {student}, department [ {cs}; type [ {application}; checkStatus)
rule(position [ {student}, department [ {ee}; type [ {application}; checkStatus)
rule(position [ {student}; student = student, type [ {transcript}; read)
rule(position [ {faculty}, department [ {cs}; crs = crs, type [ {roster}; read)
rule(position [ {faculty}, department [ {ee}; crs = crs, type [ {roster}; read)
rule(position [ {faculty}, department [ {cs}; crs = crs, type [ {gradebook}; {addScore, changeScore, assignGrade, readScore})
rule(position [ {faculty}, department [ {ee}; crs = crs, type [ {gradebook}; {addScore, changeScore, assignGrade, readScore})
rule(position [ {staff}, department [ {registrar}; crs = crs, type [ {roster}; {read, write})
rule(position [ {staff}, department [ {admissions}; student = student, type [ {application}; {read, setStatus})
rule(position [ {applicant}; type [ {application}; checkStatus)
