
===============================================================
ITERATION : 4
===============================================================
rule(position [ {registrar}; student = student, departments ] departments, type [ {transcript}; {read};)
rule(position [ {csChair}; student = student, departments [ {cs}, type [ {transcript}; {read};)
rule(position [ {eeChair}; student = student, departments [ {ee}, type [ {transcript}; {read};)
rule(position [ {student}, department [ {cs}; departments [ {cs}, type [ {gradebook}; {readScore, addScore, readMyScores}; crsTaken ] crs)
rule(position [ {student}, department [ {ee}; departments [ {ee}, type [ {gradebook}; {readScore, addScore, readMyScores}; crsTaken ] crs)
rule(position [ {staff}, department [ {registrar}; departments [ {cs}; type [ {roster}; {read, write}; crs = crs)
rule(position [ {staff}, department [ {registrar}; departments [ {ee}; type [ {roster}; {read, write}; crs = crs)
rule(position [ {faculty}, department [ {cs}; departments [ {cs}, type [ {roster, gradebook}; {read, addScore, changeScore, assignGrade}; crsTaught ] crs)
rule(position [ {faculty}, department [ {ee}; departments [ {ee}, type [ {roster, gradebook}; {read, addScore, changeScore, assignGrade}; crsTaught ] crs)
rule(position [ {student}; student = student, type [ {application}; {checkStatus};)
rule(position [ {applicant}; student = student, type [ {application}; {checkStatus};)
rule(position [ {staff}, department [ {admissions}; student = student, type [ {application}; {read, setStatus};)

===============================================================
ITERATION : 3
===============================================================
rule(position [ {registrar}; student = student, departments ] departments, type [ {transcript}; {read}; )
rule(position [ {csChair}; student = student, departments [ {cs}, type [ {transcript}; {read}; )
rule(position [ {eeChair}; student = student, departments [ {ee}, type [ {transcript}; {read}; )
rule(position [ {student}, department [ {cs}; departments ] {cs}, type [ {transcript}, student = uid; {read}; )
rule(position [ {student}, department [ {ee}; departments ] {ee}, type [ {transcript}, student = uid; {read}; )
rule(position [ {faculty}, department [ {ee}; crsTaught ] crs, type [ {gradebook}; {readScore, assignGrade, addScore, changeScore}; crs = crs)
rule(position [ {faculty}, department [ {cs}; crsTaught ] crs, type [ {gradebook}; {readScore, assignGrade, addScore, changeScore}; crs = crs)
rule(position [ {student}, department [ {cs}; type [ {gradebook}; {readMyScores, addScore, readScore}; departments ] {cs})
rule(position [ {student}, department [ {ee}; type [ {gradebook}; {readMyScores, addScore, readScore}; departments ] {ee})
rule(position [ {faculty}, department [ {cs}; crsTaught ] crs, type [ {roster}; {read}; crs = crs)
rule(position [ {faculty}, department [ {ee}; crsTaught ] crs, type [ {roster}; {read}; crs = crs)
rule(position [ {registrar}; departments ] departments, type [ {roster}; {read, write}; )
rule(position [ {staff}, department [ {admissions}; type [ {application}, student = student; {read, setStatus}; )
rule(position [ {applicant}; type [ {application}, student = uid; {checkStatus}; )
rule(position [ {student}; type [ {application}, student = uid; {checkStatus}; )

===============================================================
ITERATION : 2
===============================================================
rule(position [ {registrar}; student ] {cs}; type [ {transcript}; read)
rule(position [ {registrar}; student ] {ee}; type [ {transcript}; read)
rule(position [ {student}, crsTaken ] {cs602}; type [ {gradebook}; readScore)
rule(isChair [ {True}; student ] {cs}; type [ {transcript}; read)
rule(position [ {student}, uid = student; type [ {transcript}; read)
rule(position [ {registrar}; crs ] {cs101}; type [ {roster}; write)
rule(position [ {admissions}; student ] {eeStu3}; type [ {application}; setStatus)
rule(position [ {faculty}, crsTaught ] {ee101}; type [ {gradebook}; readScore)
rule(position [ {admissions}; student ] {applicant1}; type [ {application}; read)
rule(position [ {registrar}; crs ] {ee101}; type [ {roster}; write)
rule(position [ {faculty}, crsTaught ] {cs101}; type [ {roster}; read)
rule(position [ {student}, uid = student; type [ {application}; checkStatus)
rule(position [ {registrar}; crs ] {cs602}; type [ {roster}; read)
rule(position [ {admissions}; student ] {eeStu3}; type [ {application}; setStatus)
rule(position [ {admissions}; student ] {eeStu5}; type [ {application}; setStatus)
rule(position [ {registrar}; crs ] {ee101}; type [ {roster}; write)
rule(position [ {student}, crsTaken ] {cs602}; type [ {gradebook}; readScore)
rule(position [ {registrar}; student ] {eeStu1}; type [ {transcript}; read)
rule(position [ {admissions}; student ] {csStu4}; type [ {application}; read)
rule(position [ {admissions}; student ] {eeStu1}; type [ {application}; setStatus)
rule(position [ {student}, crsTaken ] {cs601}, crsTaught ] {cs601}; type [ {gradebook}; readMyScores)
rule(position [ {student}, uid = student; type [ {application}; checkStatus)
rule(position [ {student}, uid = student; type [ {transcript}; read)
rule(isChair [ {True}; student ] {ee}; type [ {transcript}; read)
rule(position [ {registrar}; student ] {csStu3}; type [ {transcript}; read)
rule(position [ {faculty}, crsTaught ] {cs101}; type [ {gradebook}; addScore)
rule(position [ {student}, uid = student; type [ {application}; checkStatus)
rule(position [ {student}, crsTaught ] {ee101}; type [ {gradebook}; addScore)
rule(position [ {student}, crsTaught ] {ee602}; type [ {gradebook}; addScore)
rule(position [ {student}, uid = student; type [ {application}; checkStatus)
rule(isChair [ {True}; student ] {ee}; type [ {transcript}; read)
rule(position [ {applicant}; student ] {applicant1}; type [ {application}; checkStatus)
rule(position [ {faculty}, crsTaught ] {ee601}; type [ {roster}; read)
rule(position [ {admissions}; student ] {csStu2}; type [ {application}; read)
rule(position [ {faculty}, crsTaught ] {ee601}; type [ {gradebook}; readScore)
rule(position [ {registrar}; crs ] {ee601}; type [ {roster}; read)
rule(position [ {registrar}; crs ] {cs602}; type [ {roster}; write)
rule(position [ {admissions}; student ] {applicant2}; type [ {application}; read)
rule(position [ {admissions}; student ] {applicant2}; type [ {application}; setStatus)
rule(isChair [ {True}; student ] {cs}; type [ {transcript}; read)
rule(position [ {admissions}; student ] {eeStu1}; type [ {application}; setStatus)
rule(position [ {admissions}; student ] {applicant1}; type [ {application}; setStatus)
rule(position [ {registrar}; student ] {csStu2}; type [ {transcript}; read)
rule(position [ {admissions}; student ] {eeStu2}; type [ {application}; setStatus)
rule(position [ {admissions}; student ] {csStu5}; type [ {application}; read)
rule(position [ {admissions}; student ] {csStu1}; type [ {application}; read)
rule(position [ {student}, crsTaken ] {cs602}; type [ {gradebook}; addScore)
rule(position [ {student}, crsTaught ] {ee602}; type [ {gradebook}; readScore)
rule(position [ {student}, crsTaken ] {cs602}; type [ {gradebook}; readMyScores)
rule(position [ {faculty}, crsTaught ] {ee101}; type [ {gradebook}; assignGrade)
rule(position [ {registrar}; student ] {csStu4}; type [ {transcript}; read)
rule(position [ {admissions}; student ] {csStu2}; type [ {application}; read)
rule(position [ {faculty}, crsTaught ] {cs601}; type [ {gradebook}; readScore)
rule(position [ {registrar}; crs ] {cs601}; type [ {roster}; write)
rule(position [ {faculty}, crsTaught ] {cs601}; type [ {roster}; read)
rule(position [ {registrar}; student ] {csStu5}; type [ {transcript}; read)
rule(isChair [ {True}; student ] {cs}; type [ {transcript}; read)
rule(position [ {admissions}; student ] {csStu4}; type [ {application}; setStatus)
rule(position [ {registrar}; student ] {eeStu3}; type [ {transcript}; read)
rule(position [ {student}, crsTaken ] {ee601}, crsTaught ] {ee602}; type [ {gradebook}; readMyScores)
rule(position [ {admissions}; student ] {csStu3}; type [ {application}; setStatus)
rule(position [ {faculty}, crsTaught ] {cs101}; type [ {gradebook}; changeScore)
rule(isChair [ {True}; student ] {ee}; type [ {transcript}; read)
rule(position [ {registrar}; crs ] {ee602}; type [ {roster}; read)
rule(isChair [ {True}; student ] {ee}; type [ {transcript}; read)
rule(position [ {registrar}; student ] {csStu1}; type [ {transcript}; read)
rule(position [ {registrar}; crs ] {cs101}; type [ {roster}; read)
rule(position [ {admissions}; student ] {csStu5}; type [ {application}; read)
rule(position [ {student}, uid = student; type [ {transcript}; read)
rule(position [ {admissions}; student ] {csStu5}; type [ {application}; setStatus)
rule(position [ {registrar}; crs ] {cs601}; type [ {roster}; read)
rule(position [ {admissions}; student ] {eeStu1}; type [ {application}; read)
rule(position [ {admissions}; student ] {csStu3}; type [ {application}; setStatus)
rule(position [ {admissions}; student ] {eeStu4}; type [ {application}; setStatus)
rule(position [ {student}, crsTaken ] {cs601}; type [ {gradebook}; readMyScores)
rule(position [ {admissions}; student ] {eeStu1}; type [ {application}; read)
rule(position [ {student}, uid = student; type [ {application}; checkStatus)
rule(position [ {admissions}; student ] {csStu1}; type [ {application}; read)
rule(position [ {student}, crsTaken ] {ee601}; type [ {gradebook}; readMyScores)
rule(position [ {admissions}; student ] {eeStu3}; type [ {application}; read)
rule(position [ {student}, uid = student; type [ {application}; checkStatus)
rule(position [ {admissions}; student ] {eeStu4}; type [ {application}; read)
rule(position [ {registrar}; crs ] {ee602}; type [ {roster}; read)
rule(position [ {admissions}; student ] {eeStu2}; type [ {application}; read)
rule(position [ {admissions}; student ] {csStu1}; type [ {application}; setStatus)
rule(position [ {admissions}; student ] {eeStu5}; type [ {application}; read)
rule(position [ {registrar}; crs ] {ee601}; type [ {roster}; write)
rule(position [ {registrar}; crs ] {cs101}; type [ {roster}; write)
rule(position [ {student}, crsTaught ] {ee601}; type [ {gradebook}; addScore)
rule(position [ {student}; student ] {csStu3}; type [ {transcript}; read)
rule(isChair [ {True}; student ] {cs}; type [ {transcript}; read)
rule(position [ {student}, uid = student; type [ {application}; checkStatus)
rule(position [ {faculty}, crsTaught ] {cs101}; type [ {gradebook}; assignGrade)
rule(position [ {admissions}; student ] {csStu5}; type [ {application}; setStatus)
rule(position [ {student}; student ] {eeStu4}; type [ {transcript}; read)
rule(position [ {student}, crsTaught ] {ee101}; type [ {gradebook}; readScore)
rule(position [ {registrar}; student ] {eeStu2}; type [ {transcript}; read)
rule(position [ {admissions}; student ] {eeStu2}; type [ {application}; read)
rule(position [ {student}, crsTaken ] {cs601}; type [ {gradebook}; readMyScores)
rule(position [ {admissions}; student ] {csStu1}; type [ {application}; setStatus)
rule(position [ {faculty}, crsTaught ] {ee101}; type [ {roster}; read)
rule(position [ {faculty}, crsTaught ] {ee601}; type [ {gradebook}; changeScore)
rule(position [ {registrar}; crs ] {ee101}; type [ {roster}; read)
rule(position [ {admissions}; student ] {applicant2}; type [ {application}; setStatus)
rule(position [ {student}, crsTaught ] {ee601}; type [ {gradebook}; readScore)
rule(position [ {admissions}; student ] {csStu2}; type [ {application}; setStatus)
rule(position [ {registrar}; crs ] {cs601}; type [ {roster}; write)
rule(position [ {admissions}; student ] {csStu3}; type [ {application}; read)
rule(position [ {faculty}, crsTaught ] {cs601}; type [ {gradebook}; changeScore)
rule(position [ {student}, uid = student; type [ {application}; checkStatus)
rule(position [ {registrar}; crs ] {cs602}; type [ {roster}; read)
rule(position [ {registrar}; crs ] {ee602}; type [ {roster}; write)
rule(position [ {student}, crsTaken ] {ee601}, crsTaught ] {ee602}; type [ {gradebook}; readMyScores)
rule(position [ {faculty}, crsTaught ] {cs601}; type [ {gradebook}; assignGrade)
rule(position [ {registrar}; crs ] {cs601}; type [ {roster}; read)
rule(position [ {student}; student ] {eeStu1}; type [ {transcript}; read)
rule(position [ {registrar}; crs ] {ee601}; type [ {roster}; read)
rule(position [ {registrar}; crs ] {cs601}; type [ {roster}; write)
rule(position [ {admissions}; student ] {applicant1}; type [ {application}; read)
rule(position [ {admissions}; student ] {applicant1}; type [ {application}; setStatus)
rule(position [ {admissions}; student ] {eeStu4}; type [ {application}; setStatus)
rule(position [ {student}, crsTaught ] {ee602}; type [ {gradebook}; readMyScores)
rule(position [ {registrar}; crs ] {ee101}; type [ {roster}; read)
rule(isChair [ {True}; student ] {cs}; type [ {transcript}; read)
rule(position [ {registrar}; student ] {csStu5}; type [ {transcript}; read)
rule(position [ {admissions}; student ] {csStu4}; type [ {application}; read)
rule(position [ {applicant}; student ] {applicant2}; type [ {application}; checkStatus)
rule(position [ {student}, uid = student; type [ {application}; checkStatus)
rule(position [ {student}, crsTaught ] {cs602}; type [ {gradebook}; readMyScores)
rule(position [ {admissions}; student ] {applicant2}; type [ {application}; read)
rule(position [ {registrar}; crs ] {ee601}; type [ {roster}; write)
rule(position [ {faculty}, crsTaught ] {ee101}; type [ {gradebook}; addScore)
rule(position [ {admissions}; student ] {csStu2}; type [ {application}; setStatus)
rule(position [ {faculty}, crsTaught ] {ee601}; type [ {gradebook}; assignGrade)
rule(position [ {faculty}, crsTaught ] {ee101}; type [ {gradebook}; changeScore)
rule(position [ {student}, crsTaught ] {cs602}; type [ {gradebook}; addScore)
rule(position [ {admissions}; student ] {eeStu5}; type [ {application}; setStatus)
rule(position [ {faculty}, crsTaught ] {cs101}; type [ {gradebook}; readScore)
rule(position [ {student}; student ] {eeStu3}; type [ {transcript}; read)
rule(position [ {admissions}; student ] {csStu3}; type [ {application}; read)
rule(position [ {registrar}; crs ] {cs101}; type [ {roster}; read)
rule(position [ {student}, crsTaken ] {ee101}; type [ {gradebook}; readMyScores)
rule(position [ {faculty}, crsTaught ] {ee601}; type [ {gradebook}; addScore)
rule(position [ {student}, uid = student; type [ {application}; checkStatus)
rule(position [ {student}, crsTaken ] {cs101}; type [ {gradebook}; readScore)
rule(position [ {faculty}, crsTaught ] {cs601}; type [ {gradebook}; addScore)
rule(position [ {admissions}; student ] {csStu4}; type [ {application}; setStatus)
rule(position [ {admissions}; student ] {eeStu3}; type [ {application}; read)
rule(position [ {student}, uid = student; type [ {transcript}; read)
rule(isChair [ {True}; student ] {cs}; type [ {transcript}; read)
rule(position [ {student}, crsTaken ] {cs101}; type [ {gradebook}; readMyScores)
rule(position [ {admissions}; student ] {eeStu2}; type [ {application}; setStatus)
rule(position [ {student}, crsTaken ] {ee601}; type [ {gradebook}; readMyScores)
rule(position [ {admissions}; student ] {eeStu5}; type [ {application}; read)
rule(position [ {registrar}; crs ] {ee602}; type [ {roster}; write)
rule(position [ {registrar}; student ] {csStu2}; type [ {transcript}; read)
rule(position [ {student}, crsTaught ] {cs101}; type [ {gradebook}; addScore)
rule(position [ {student}; student ] {csStu1}; type [ {transcript}; read)

===============================================================
ITERATION : 1
===============================================================
rule(position [ {registrar}; student = student, type [ {transcript}; read)
rule(position [ {registrar}; crs = crs, type [ {roster}; write)
rule(position [ {registrar}; crs = crs, type [ {roster}; read)
rule(position [ {staff}, department [ {admissions}; type [ {application}, student = student; {read setStatus})
rule(position [ {faculty}, department = department; crs = crs, type [ {gradebook}; {readScore addScore changeScore assignGrade})
rule(position [ {student}, crsTaken ] crs; crs = crs, type [ {gradebook}; readScore)
rule(position [ {student}, crsTaught ] crs; crs = crs, type [ {gradebook}; {readScore addScore changeScore assignGrade})
rule(position [ {student}; type [ {transcript}, student = uid; read)
rule(position [ {faculty}, isChair [ {True}; type [ {transcript}, departments ] department; read)
rule(position [ {student}; type [ {application}, student = uid; checkStatus)
rule(position [ {applicant}; type [ {application}, student = uid; checkStatus)
rule(position [ {student}, crsTaken ] crs; crs = crs, type [ {gradebook}; readMyScores)

===============================================================
ITERATION : 0
===============================================================
rule(position [ {registrar}; student ] {cs}; type [ {transcript}; read)
rule(position [ {registrar}; student ] {ee}; type [ {transcript}; read)
rule(position [ {student}, department [ {cs}; crs ] {cs602}; type [ {gradebook}; readScore)
rule(isChair [ {True}, department [ {cs}; student ] {cs}; type [ {transcript}; read)
rule(position [ {student}, department [ {cs}; student = uid; type [ {transcript}; read)
rule(position [ {registrar}; crs ] {cs101}; type [ {roster}; write)
rule(position [ {student}, department [ {cs}; student = uid; type [ {transcript}; read)
rule(position [ {registrar}; student ] {ee}; type [ {transcript}; read)
rule(position [ {staff}, department [ {admissions}; student ] {ee}; type [ {application}; setStatus)
rule(position [ {faculty}, department [ {ee}; crs ] {ee101}; type [ {gradebook}; readScore)
rule(position [ {staff}, department [ {admissions}; type [ {application}, student = applicant1; read)
rule(position [ {registrar}; crs ] {ee101}; type [ {roster}; write)
rule(position [ {faculty}, department [ {cs}; crs ] {cs101}; type [ {roster}; read)
rule(position [ {student}, department [ {cs}; student = uid; type [ {application}; checkStatus)
rule(position [ {registrar}; crs ] {cs602}; type [ {roster}; read)
rule(position [ {staff}, department [ {admissions}; student ] {ee}; type [ {application}; setStatus)
rule(position [ {staff}, department [ {admissions}; student ] {ee}; type [ {application}; setStatus)
rule(position [ {registrar}; crs ] {ee101}; type [ {roster}; write)
rule(position [ {student}, department [ {cs}; crs ] {cs601}; type [ {gradebook}; readScore)
rule(position [ {registrar}; student ] {ee}; type [ {transcript}; read)
rule(position [ {registrar}; student ] {ee}; type [ {transcript}; read)
rule(position [ {staff}, department [ {admissions}; student ] {cs}; type [ {application}; read)
rule(position [ {staff}, department [ {admissions}; student ] {ee}; type [ {application}; setStatus)
rule(position [ {registrar}; student ] {ee}; type [ {transcript}; read)
rule(position [ {staff}, department [ {admissions}; student ] {ee}; type [ {application}; read)
rule(position [ {student}, department [ {cs}; crs ] {cs601}; type [ {gradebook}; readMyScores)
rule(position [ {student}, department [ {cs}; student = uid; type [ {application}; checkStatus)
rule(position [ {student}, department [ {ee}; student = uid; type [ {transcript}; read)
rule(isChair [ {True}, department [ {ee}; student ] {ee}; type [ {transcript}; read)
rule(position [ {registrar}; student ] {cs}; type [ {transcript}; read)
rule(position [ {faculty}, department [ {cs}; crs ] {cs101}; type [ {gradebook}; addScore)
rule(position [ {registrar}; student ] {cs}; type [ {transcript}; read)
rule(position [ {student}, department [ {cs}; student = uid; type [ {application}; checkStatus)
rule(position [ {student}, department [ {ee}; crs ] {ee101}; type [ {gradebook}; addScore)
rule(position [ {student}, department [ {ee}; crs ] {ee602}; type [ {gradebook}; addScore)
rule(position [ {registrar}; student ] {ee}; type [ {transcript}; read)
rule(position [ {student}, department [ {ee}; student = uid; type [ {application}; checkStatus)
rule(isChair [ {True}, department [ {ee}; student ] {ee}; type [ {transcript}; read)
rule(position [ {applicant}; type [ {application}, student = applicant1; checkStatus)
rule(position [ {faculty}, department [ {ee}; crs ] {ee601}; type [ {roster}; read)
rule(position [ {staff}, department [ {admissions}; student ] {cs}; type [ {application}; read)
rule(position [ {registrar}; student ] {ee}; type [ {transcript}; read)
rule(position [ {faculty}, department [ {ee}; crs ] {ee601}; type [ {gradebook}; readScore)
rule(position [ {registrar}; crs ] {ee601}; type [ {roster}; read)
rule(position [ {registrar}; crs ] {cs602}; type [ {roster}; write)
rule(position [ {staff}, department [ {admissions}; type [ {application}, student = applicant2; read)
rule(position [ {registrar}; student ] {ee}; type [ {transcript}; read)
rule(position [ {staff}, department [ {admissions}; type [ {application}, student = applicant2; setStatus)
rule(isChair [ {True}, department [ {cs}; student ] {cs}; type [ {transcript}; read)
rule(position [ {staff}, department [ {admissions}; student ] {ee}; type [ {application}; setStatus)
rule(position [ {staff}, department [ {admissions}; type [ {application}, student = applicant1; setStatus)
rule(position [ {registrar}; student ] {cs}; type [ {transcript}; read)
rule(position [ {staff}, department [ {admissions}; student ] {ee}; type [ {application}; setStatus)
rule(position [ {staff}, department [ {admissions}; student ] {cs}; type [ {application}; read)
rule(position [ {staff}, department [ {admissions}; student ] {cs}; type [ {application}; read)
rule(position [ {student}, department [ {cs}; crs ] {cs601}; type [ {gradebook}; addScore)
rule(position [ {student}, department [ {ee}; crs ] {ee602}; type [ {gradebook}; readScore)
rule(position [ {student}, department [ {cs}; crs ] {cs602}; type [ {gradebook}; readMyScores)
rule(position [ {faculty}, department [ {ee}; crs ] {ee101}; type [ {gradebook}; assignGrade)
rule(position [ {registrar}; student ] {cs}; type [ {transcript}; read)
rule(position [ {staff}, department [ {admissions}; student ] {cs}; type [ {application}; read)
rule(position [ {faculty}, department [ {cs}; crs ] {cs601}; type [ {gradebook}; readScore)
rule(position [ {registrar}; crs ] {cs601}; type [ {roster}; write)
rule(position [ {faculty}, department [ {cs}; crs ] {cs601}; type [ {roster}; read)
rule(position [ {registrar}; student ] {cs}; type [ {transcript}; read)
rule(isChair [ {True}, department [ {cs}; student ] {cs}; type [ {transcript}; read)
rule(position [ {staff}, department [ {admissions}; student ] {cs}; type [ {application}; setStatus)
rule(position [ {registrar}; student ] {ee}; type [ {transcript}; read)
rule(position [ {registrar}; student ] {ee}; type [ {transcript}; read)
rule(position [ {student}, department [ {ee}; crs ] {ee602}; type [ {gradebook}; readMyScores)
rule(position [ {staff}, department [ {admissions}; student ] {cs}; type [ {application}; setStatus)
rule(position [ {faculty}, department [ {cs}; crs ] {cs101}; type [ {gradebook}; changeScore)
rule(isChair [ {True}, department [ {ee}; student ] {ee}; type [ {transcript}; read)
rule(position [ {registrar}; crs ] {ee602}; type [ {roster}; read)
rule(isChair [ {True}, department [ {ee}; student ] {ee}; type [ {transcript}; read)
rule(position [ {registrar}; student ] {cs}; type [ {transcript}; read)
rule(position [ {registrar}; crs ] {cs101}; type [ {roster}; read)
rule(position [ {staff}, department [ {admissions}; student ] {cs}; type [ {application}; read)
rule(position [ {student}, department [ {ee}; student = uid; type [ {transcript}; read)
rule(position [ {staff}, department [ {admissions}; student ] {cs}; type [ {application}; setStatus)
rule(position [ {registrar}; crs ] {cs601}; type [ {roster}; read)
rule(position [ {staff}, department [ {admissions}; student ] {ee}; type [ {application}; read)
rule(position [ {staff}, department [ {admissions}; student ] {cs}; type [ {application}; setStatus)
rule(position [ {staff}, department [ {admissions}; student ] {ee}; type [ {application}; setStatus)
rule(position [ {student}, department [ {cs}; crs ] {cs601}; type [ {gradebook}; readMyScores)
rule(position [ {staff}, department [ {admissions}; student ] {ee}; type [ {application}; read)
rule(position [ {student}, department [ {ee}; student = uid; type [ {application}; checkStatus)
rule(position [ {staff}, department [ {admissions}; student ] {cs}; type [ {application}; read)
rule(position [ {student}, department [ {ee}; crs ] {ee601}; type [ {gradebook}; readMyScores)
rule(position [ {staff}, department [ {admissions}; student ] {ee}; type [ {application}; read)
rule(position [ {student}, department [ {ee}; student = uid; type [ {application}; checkStatus)
rule(position [ {staff}, department [ {admissions}; student ] {ee}; type [ {application}; read)
rule(position [ {staff}, department [ {admissions}; student ] {ee}; type [ {application}; read)
rule(position [ {staff}, department [ {admissions}; student ] {cs}; type [ {application}; setStatus)
rule(position [ {staff}, department [ {admissions}; student ] {ee}; type [ {application}; read)
rule(position [ {registrar}; crs ] {ee602}; type [ {roster}; write)
rule(position [ {registrar}; crs ] {cs101}; type [ {roster}; write)
rule(position [ {student}, department [ {ee}; crs ] {ee601}; type [ {gradebook}; addScore)
rule(position [ {student}, department [ {cs}; student = uid; type [ {transcript}; read)
rule(isChair [ {True}, department [ {ee}; student ] {ee}; type [ {transcript}; read)
rule(position [ {student}, department [ {cs}; student = uid; type [ {application}; checkStatus)
rule(position [ {faculty}, department [ {cs}; crs ] {cs101}; type [ {gradebook}; assignGrade)
rule(position [ {staff}, department [ {admissions}; student ] {cs}; type [ {application}; setStatus)
rule(position [ {student}, department [ {ee}; student = uid; type [ {transcript}; read)
rule(position [ {student}, department [ {ee}; crs ] {ee101}; type [ {gradebook}; readScore)
rule(position [ {registrar}; student ] {ee}; type [ {transcript}; read)
rule(position [ {staff}, department [ {admissions}; student ] {ee}; type [ {application}; read)
rule(position [ {student}, department [ {cs}; crs ] {cs601}; type [ {gradebook}; readMyScores)
rule(position [ {staff}, department [ {admissions}; student ] {cs}; type [ {application}; setStatus)
rule(position [ {faculty}, department [ {ee}; crs ] {ee101}; type [ {roster}; read)
rule(position [ {faculty}, department [ {ee}; crs ] {ee601}; type [ {gradebook}; changeScore)
rule(position [ {registrar}; crs ] {ee101}; type [ {roster}; read)
rule(position [ {staff}, department [ {admissions}; type [ {application}, student = applicant2; setStatus)
rule(position [ {student}, department [ {ee}; crs ] {ee601}; type [ {gradebook}; readScore)
rule(position [ {staff}, department [ {admissions}; student ] {cs}; type [ {application}; setStatus)
rule(position [ {faculty}, department [ {cs}; crs ] {cs601}; type [ {gradebook}; changeScore)
rule(position [ {student}, department [ {cs}; student = uid; type [ {application}; checkStatus)
rule(position [ {registrar}; crs ] {cs602}; type [ {roster}; read)
rule(position [ {registrar}; crs ] {ee602}; type [ {roster}; write)
rule(position [ {student}, department [ {ee}; crs ] {ee601}; type [ {gradebook}; readMyScores)
rule(position [ {faculty}, department [ {cs}; crs ] {cs601}; type [ {gradebook}; assignGrade)
rule(position [ {registrar}; crs ] {cs601}; type [ {roster}; read)
rule(position [ {student}, department [ {ee}; student = uid; type [ {transcript}; read)
rule(position [ {registrar}; crs ] {ee601}; type [ {roster}; read)
rule(position [ {registrar}; crs ] {cs601}; type [ {roster}; write)
rule(position [ {staff}, department [ {admissions}; type [ {application}, student = applicant1; read)
rule(position [ {staff}, department [ {admissions}; type [ {application}, student = applicant1; setStatus)
rule(position [ {staff}, department [ {admissions}; student ] {ee}; type [ {application}; setStatus)
rule(position [ {student}, department [ {ee}; crs ] {ee602}; type [ {gradebook}; readMyScores)
rule(position [ {registrar}; crs ] {ee101}; type [ {roster}; read)
rule(isChair [ {True}, department [ {cs}; student ] {cs}; type [ {transcript}; read)
rule(position [ {registrar}; student ] {cs}; type [ {transcript}; read)
rule(position [ {staff}, department [ {admissions}; student ] {cs}; type [ {application}; read)
rule(position [ {applicant}; type [ {application}, student = applicant2; checkStatus)
rule(position [ {student}, department [ {ee}; student = uid; type [ {application}; checkStatus)
rule(position [ {student}, department [ {cs}; crs ] {cs602}; type [ {gradebook}; readMyScores)
rule(position [ {staff}, department [ {admissions}; type [ {application}, student = applicant2; read)
rule(position [ {registrar}; crs ] {ee601}; type [ {roster}; write)
rule(position [ {faculty}, department [ {ee}; crs ] {ee101}; type [ {gradebook}; addScore)
rule(position [ {staff}, department [ {admissions}; student ] {cs}; type [ {application}; setStatus)
rule(position [ {faculty}, department [ {ee}; crs ] {ee601}; type [ {gradebook}; assignGrade)
rule(position [ {faculty}, department [ {ee}; crs ] {ee101}; type [ {gradebook}; changeScore)
rule(position [ {student}, department [ {cs}; crs ] {cs602}; type [ {gradebook}; addScore)
rule(position [ {staff}, department [ {admissions}; student ] {ee}; type [ {application}; setStatus)
rule(position [ {faculty}, department [ {cs}; crs ] {cs101}; type [ {gradebook}; readScore)
rule(position [ {student}, department [ {ee}; student = uid; type [ {transcript}; read)
rule(position [ {staff}, department [ {admissions}; student ] {cs}; type [ {application}; read)
rule(position [ {student}, department [ {ee}; crs ] {ee101}; type [ {gradebook}; readMyScores)
rule(position [ {faculty}, department [ {ee}; crs ] {ee601}; type [ {gradebook}; addScore)
rule(position [ {student}, department [ {ee}; student = uid; type [ {application}; checkStatus)
rule(position [ {student}, department [ {cs}; crs ] {cs101}; type [ {gradebook}; readScore)
rule(position [ {faculty}, department [ {cs}; crs ] {cs601}; type [ {gradebook}; addScore)
rule(position [ {staff}, department [ {admissions}; student ] {cs}; type [ {application}; setStatus)
rule(position [ {staff}, department [ {admissions}; student ] {ee}; type [ {application}; read)
rule(position [ {student}, department [ {cs}; student = uid; type [ {application}; checkStatus)
rule(isChair [ {True}, department [ {cs}; student ] {cs}; type [ {transcript}; read)
rule(position [ {student}, department [ {cs}; crs ] {cs101}; type [ {gradebook}; readMyScores)
rule(position [ {staff}, department [ {admissions}; student ] {ee}; type [ {application}; setStatus)
rule(position [ {student}, department [ {ee}; crs ] {ee601}; type [ {gradebook}; readMyScores)
rule(position [ {staff}, department [ {admissions}; student ] {ee}; type [ {application}; read)
rule(position [ {registrar}; crs ] {ee602}; type [ {roster}; write)
rule(position [ {registrar}; student ] {cs}; type [ {transcript}; read)
rule(position [ {student}, department [ {cs}; crs ] {cs101}; type [ {gradebook}; addScore)
rule(position [ {student}, department [ {cs}; student = uid; type [ {transcript}; read)
