rule(position [ {registrar}; student = student, departments ] departments, type [ {transcript}; {read};)
rule(position [ {csChair}; student = student, departments [ {cs}, type [ {transcript}; {read};)
rule(position [ {eeChair}; student = student, departments [ {ee}, type [ {transcript}; {read};)
rule(position [ {student}, department [ {cs}; departments [ {cs}, type [ {gradebook}; {readScore, addScore, readMyScores}; crsTaken ] crs)
rule(position [ {student}, department [ {ee}; departments [ {ee}, type [ {gradebook}; {readScore, addScore, readMyScores}; crsTaken ] crs)
rule(position [ {staff}, department [ {registrar}; departments [ {cs}; type [ {roster}; {read, write}; crs = crs)
rule(position [ {staff}, department [ {registrar}; departments [ {ee}; type [ {roster}; {read, write}; crs = crs)
rule(position [ {faculty}, department [ {cs}; departments [ {cs}, type [ {roster, gradebook}; {read, addScore, changeScore, assignGrade}; crsTaught ] crs)
rule(position [ {faculty}, department [ {ee}; departments [ {ee}, type [ {roster, gradebook}; {read, addScore, changeScore, assignGrade}; crsTaught ] crs)
rule(position [ {student}; student = student, type [ {application}; {checkStatus};)
rule(position [ {applicant}; student = student, type [ {application}; {checkStatus};)
rule(position [ {staff}, department [ {admissions}; student = student, type [ {application}; {read, setStatus};)
