rule(position [ {registrar}; type [ {transcript}; acts = {read}; departments = departments)
rule(position [ {csChair}; type [ {transcript}; acts = {read}; departments = {cs})
rule(position [ {eeChair}; type [ {transcript}; acts = {read}; departments = {ee})
rule(position [ {student}, uid = student; type [ {transcript}; acts = {read}; departments = department)
rule(position [ {faculty}; crsTaught ] crs; type [ {gradebook}; acts = {readScore, addScore, assignGrade, changeScore}; crs = crs)
rule(position [ {student}; crsTaken ] crs; type [ {gradebook}; acts = {readMyScores}; crs = crs)
rule(position [ {staff}, department = registrar; type [ {roster}; acts = {write, read}; departments = departments)
rule(position [ {faculty}; crsTaught ] crs; type [ {roster}; acts = {read}; crs = crs)
rule(position [ {student}; type [ {application}, student = uid; acts = {checkStatus})
rule(position [ {applicant}, uid = student; type [ {application}; acts = {checkStatus})
rule(position [ {staff}, department = admissions; type [ {application}; acts = {read, setStatus}; student = student)
rule(position [ {student}; crsTaught ] crs; type [ {gradebook}; acts = {readScore, addScore}; crs = crs)
rule(position [ {student}; crsTaught ] crs; type [ {roster}; acts = {read}; crs = crs)
rule(position [ {student}; crsTaken ] crs; type [ {gradebook}; acts = {readScore, addScore}; crs = crs)
