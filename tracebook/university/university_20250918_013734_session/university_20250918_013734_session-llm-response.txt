rule(position [ {registrar}; student = student, type [ {transcript}; {read})
rule(position [ {csChair}; student = student, departments [ {cs}, type [ {transcript}; {read})
rule(position [ {eeChair}; student = student, departments [ {ee}, type [ {transcript}; {read})
rule(uid = csStu2; type [ {gradebook}, crs = cs602; {readScore})
rule(position [ {student}, department [ {cs}; type [ {gradebook}, crs = cs601; {readMyScores, addScore})
rule(position [ {student}, department [ {ee}; type [ {gradebook}, crs = ee601; {readMyScores, addScore})
rule(position [ {student}, department [ {ee}; type [ {gradebook}, crs = ee602; {readMyScores, addScore})
rule(position [ {student}, department [ {cs}; type [ {gradebook}, crs = cs602; {readMyScores, addScore})
rule(position [ {staff}, department [ {registrar}; type [ {roster}; {write, read})
rule(position [ {staff}, department [ {admissions}; type [ {application}; {setStatus, read})
rule(position [ {faculty}, department [ {ee}; type [ {gradebook}, crs = ee101; {readScore, addScore, assignGrade, changeScore})
rule(position [ {faculty}, department [ {cs}; type [ {gradebook}, crs = cs101; {readScore, addScore, assignGrade, changeScore})
rule(position [ {faculty}, department [ {ee}; type [ {roster}, crs = ee601; {read})
rule(position [ {faculty}, department [ {cs}; type [ {roster}, crs = cs101; {read})
rule(position [ {student}; type [ {application}, student = uid; {checkStatus})
rule(position [ {applicant}; type [ {application}, student = uid; {checkStatus})
rule(position [ {student}; type [ {transcript}, student = uid; {read})
rule(position [ {student}, department [ {ee}; type [ {gradebook}, crs = ee101; {readScore})
rule(uid = csStu2; type [ {gradebook}, crs = cs101; {readScore, addScore})
rule(uid = eeStu1; type [ {gradebook}, crs = ee101; {readMyScores})
