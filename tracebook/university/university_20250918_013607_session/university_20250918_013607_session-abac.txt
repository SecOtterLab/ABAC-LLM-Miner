# ABAC policy for a university.

# Note that the two words "user" and "subject" are used interchangeably in this document.

# Please refer to the policy description document for the detailed descriptions subject attributes and resource attributes. Note that some attributes might be irrelevant for some users and resources.

#------------------------------------------------------------
# user attribute data
#------------------------------------------------------------

# applicants for admission to the university

userAttrib(applicant1, position=applicant)
userAttrib(applicant2, position=applicant)

# students

userAttrib(csStu1, position=student, department=cs, crsTaken={cs101})
userAttrib(csStu2, position=student, department=cs, crsTaken={cs601}, crsTaught={cs101 cs602})
userAttrib(csStu3, position=student, department=cs, crsTaken={cs602}, crsTaught={cs601})
userAttrib(csStu4, position=student, department=cs, crsTaken={cs601})
userAttrib(csStu5, position=student, department=cs, crsTaken={cs601 cs602})

userAttrib(eeStu1, position=student, department=ee, crsTaken={ee101})
userAttrib(eeStu2, position=student, department=ee, crsTaken={ee601}, crsTaught={ee101 ee602})
userAttrib(eeStu3, position=student, department=ee, crsTaken={ee602}, crsTaught={ee601})
userAttrib(eeStu4, position=student, department=ee, crsTaken={ee601})
userAttrib(eeStu5, position=student, department=ee, crsTaken={ee601 ee602})

# faculty

userAttrib(csFac1, position=faculty, department=cs, crsTaught={cs101})
userAttrib(csFac2, position=faculty, department=cs, crsTaught={cs601})
userAttrib(csChair, isChair=True, department=cs)

userAttrib(eeFac1, position=faculty, department=ee, crsTaught={ee101})
userAttrib(eeFac2, position=faculty, department=ee, crsTaught={ee601})
userAttrib(eeChair, isChair=True, department=ee)

# staff

userAttrib(registrar1, position=staff, department=registrar)
userAttrib(registrar2, position=staff, department=registrar)

userAttrib(admissions1, position=staff, department=admissions)
userAttrib(admissions2, position=staff, department=admissions)

#------------------------------------------------------------
# resource attribute data
#------------------------------------------------------------

# applications.  applications exist for applicants and students (accepted
# applicants).

resourceAttrib(application1, type=application, student=applicant1)
resourceAttrib(application2, type=application, student=applicant2)

resourceAttrib(csStu1application, type=application, student=csStu1)
resourceAttrib(csStu2application, type=application, student=csStu2)
resourceAttrib(csStu3application, type=application, student=csStu3)
resourceAttrib(csStu4application, type=application, student=csStu4)
resourceAttrib(csStu5application, type=application, student=csStu5)

resourceAttrib(eeStu1application, type=application, student=eeStu1)
resourceAttrib(eeStu2application, type=application, student=eeStu2)
resourceAttrib(eeStu3application, type=application, student=eeStu3)
resourceAttrib(eeStu4application, type=application, student=eeStu4)
resourceAttrib(eeStu5application, type=application, student=eeStu5)

# gradebooks

resourceAttrib(cs101gradebook, departments={cs}, crs=cs101, type=gradebook)
resourceAttrib(cs601gradebook, departments={cs}, crs=cs601, type=gradebook)
resourceAttrib(cs602gradebook, departments={cs}, crs=cs602, type=gradebook)

resourceAttrib(ee101gradebook, departments={ee}, crs=ee101, type=gradebook)
resourceAttrib(ee601gradebook, departments={ee}, crs=ee601, type=gradebook)
resourceAttrib(ee602gradebook, departments={ee}, crs=ee602, type=gradebook)

# rosters

resourceAttrib(cs101roster, departments={cs}, crs=cs101, type=roster)
resourceAttrib(cs601roster, departments={cs}, crs=cs601, type=roster)
resourceAttrib(cs602roster, departments={cs}, crs=cs602, type=roster)

resourceAttrib(ee101roster, departments={ee}, crs=ee101, type=roster)
resourceAttrib(ee601roster, departments={ee}, crs=ee601, type=roster)
resourceAttrib(ee602roster, departments={ee}, crs=ee602, type=roster)

# transcripts

resourceAttrib(csStu1trans, student=csStu1, departments={cs}, type=transcript)
resourceAttrib(csStu2trans, student=csStu2, departments={cs}, type=transcript)
resourceAttrib(csStu3trans, student=csStu3, departments={cs}, type=transcript)
resourceAttrib(csStu4trans, student=csStu4, departments={cs}, type=transcript)
resourceAttrib(csStu5trans, student=csStu5, departments={cs}, type=transcript)

resourceAttrib(eeStu1trans, student=eeStu1, departments={ee}, type=transcript)
resourceAttrib(eeStu2trans, student=eeStu2, departments={ee}, type=transcript)
resourceAttrib(eeStu3trans, student=eeStu3, departments={ee}, type=transcript)
resourceAttrib(eeStu4trans, student=eeStu4, departments={ee}, type=transcript)
resourceAttrib(eeStu5trans, student=eeStu5, departments={ee}, type=transcript)

rule(position [ {registrar}; student = student, type [ {transcript}; {read})
rule(position [ {csChair}; student = student, departments [ {cs}, type [ {transcript}; {read})
rule(position [ {eeChair}; student = student, departments [ {ee}, type [ {transcript}; {read})
rule(uid = csStu2; rid = csStu2trans; {read})
rule(position [ {student}, department [ {cs}, crsTaken ] cs101; crs = cs101, type [ {gradebook}; {readScore, addScore, readMyScores})
rule(position [ {student}, department [ {cs}, crsTaken ] cs601; crs = cs601, type [ {gradebook}; {readScore, addScore, readMyScores})
rule(position [ {student}, department [ {cs}, crsTaken ] cs602; crs = cs602, type [ {gradebook}; {readScore, addScore, readMyScores})
rule(position [ {student}, department [ {ee}, crsTaken ] ee101; crs = ee101, type [ {gradebook}; {readScore, addScore, readMyScores})
rule(position [ {student}, department [ {ee}, crsTaken ] ee601; crs = ee601, type [ {gradebook}; {readScore, addScore, readMyScores})
rule(position [ {student}, department [ {ee}, crsTaken ] ee602; crs = ee602, type [ {gradebook}; {readScore, addScore, readMyScores})
rule(position [ {faculty}, department [ {cs}, crsTaught ] cs101; crs = cs101, type [ {roster}; {read})
rule(position [ {faculty}, department [ {cs}, crsTaught ] cs101; crs = cs101, type [ {gradebook}; {readScore, addScore, changeScore, assignGrade})
rule(position [ {faculty}, department [ {cs}, crsTaught ] cs601; crs = cs601, type [ {gradebook}; {readScore, addScore, changeScore, assignGrade})
rule(position [ {faculty}, department [ {ee}, crsTaught ] ee101; crs = ee101, type [ {gradebook}; {readScore, addScore, changeScore, assignGrade})
rule(position [ {faculty}, department [ {ee}, crsTaught ] ee601; crs = ee601, type [ {gradebook}; {readScore, addScore, changeScore, assignGrade})
rule(position [ {staff}, department [ {registrar}; crs = cs101, type [ {roster}; {write})
rule(position [ {staff}, department [ {registrar}; crs = cs601, type [ {roster}; {write, read})
rule(position [ {staff}, department [ {registrar}; crs = cs602, type [ {roster}; {write, read})
rule(position [ {staff}, department [ {registrar}; crs = ee101, type [ {roster}; {write, read})
rule(position [ {staff}, department [ {registrar}; crs = ee601, type [ {roster}; {write, read})
rule(position [ {staff}, department [ {registrar}; crs = ee602, type [ {roster}; {write})
rule(position [ {applicant, student}; student = uid, type [ {application}; {checkStatus})
rule(position [ {staff}, department [ {admissions}; student = student, type [ {application}; {read, setStatus})
rule(uid = csStu1; rid = csStu1trans; {read})
rule(uid = csStu3; rid = csStu3trans; {read})
rule(uid = csStu4; rid = csStu4trans; {read})
rule(uid = csStu5; rid = csStu5trans; {read})
rule(uid = eeStu1; rid = eeStu1trans; {read})
rule(uid = eeStu2; rid = eeStu2trans; {read})
rule(uid = eeStu3; rid = eeStu3trans; {read})
rule(uid = eeStu4; rid = eeStu4trans; {read})
rule(uid = eeStu5; rid = eeStu5trans; {read})
rule(position [ {student}, department [ {cs}; type [ {application}; {checkStatus})
rule(position [ {student}, department [ {ee}; type [ {application}; {checkStatus})
