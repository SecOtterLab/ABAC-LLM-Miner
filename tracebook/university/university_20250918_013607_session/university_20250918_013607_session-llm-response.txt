rule(position [ {registrar}; student = student, type [ {transcript}; {read})
rule(position [ {csChair}; student = student, departments [ {cs}, type [ {transcript}; {read})
rule(position [ {eeChair}; student = student, departments [ {ee}, type [ {transcript}; {read})
rule(uid = csStu2; rid = csStu2trans; {read})
rule(position [ {student}, department [ {cs}, crsTaken ] cs101; crs = cs101, type [ {gradebook}; {readScore, addScore, readMyScores})
rule(position [ {student}, department [ {cs}, crsTaken ] cs601; crs = cs601, type [ {gradebook}; {readScore, addScore, readMyScores})
rule(position [ {student}, department [ {cs}, crsTaken ] cs602; crs = cs602, type [ {gradebook}; {readScore, addScore, readMyScores})
rule(position [ {student}, department [ {ee}, crsTaken ] ee101; crs = ee101, type [ {gradebook}; {readScore, addScore, readMyScores})
rule(position [ {student}, department [ {ee}, crsTaken ] ee601; crs = ee601, type [ {gradebook}; {readScore, addScore, readMyScores})
rule(position [ {student}, department [ {ee}, crsTaken ] ee602; crs = ee602, type [ {gradebook}; {readScore, addScore, readMyScores})
rule(position [ {faculty}, department [ {cs}, crsTaught ] cs101; crs = cs101, type [ {roster}; {read})
rule(position [ {faculty}, department [ {cs}, crsTaught ] cs101; crs = cs101, type [ {gradebook}; {readScore, addScore, changeScore, assignGrade})
rule(position [ {faculty}, department [ {cs}, crsTaught ] cs601; crs = cs601, type [ {gradebook}; {readScore, addScore, changeScore, assignGrade})
rule(position [ {faculty}, department [ {ee}, crsTaught ] ee101; crs = ee101, type [ {gradebook}; {readScore, addScore, changeScore, assignGrade})
rule(position [ {faculty}, department [ {ee}, crsTaught ] ee601; crs = ee601, type [ {gradebook}; {readScore, addScore, changeScore, assignGrade})
rule(position [ {staff}, department [ {registrar}; crs = cs101, type [ {roster}; {write})
rule(position [ {staff}, department [ {registrar}; crs = cs601, type [ {roster}; {write, read})
rule(position [ {staff}, department [ {registrar}; crs = cs602, type [ {roster}; {write, read})
rule(position [ {staff}, department [ {registrar}; crs = ee101, type [ {roster}; {write, read})
rule(position [ {staff}, department [ {registrar}; crs = ee601, type [ {roster}; {write, read})
rule(position [ {staff}, department [ {registrar}; crs = ee602, type [ {roster}; {write})
rule(position [ {applicant, student}; student = uid, type [ {application}; {checkStatus})
rule(position [ {staff}, department [ {admissions}; student = student, type [ {application}; {read, setStatus})
rule(uid = csStu1; rid = csStu1trans; {read})
rule(uid = csStu3; rid = csStu3trans; {read})
rule(uid = csStu4; rid = csStu4trans; {read})
rule(uid = csStu5; rid = csStu5trans; {read})
rule(uid = eeStu1; rid = eeStu1trans; {read})
rule(uid = eeStu2; rid = eeStu2trans; {read})
rule(uid = eeStu3; rid = eeStu3trans; {read})
rule(uid = eeStu4; rid = eeStu4trans; {read})
rule(uid = eeStu5; rid = eeStu5trans; {read})
rule(position [ {student}, department [ {cs}; type [ {application}; {checkStatus})
rule(position [ {student}, department [ {ee}; type [ {application}; {checkStatus})
