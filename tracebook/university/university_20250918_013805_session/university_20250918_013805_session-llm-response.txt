rule(position [ {registrar}; student ] departments, type [ {transcript}]; {read}; )
rule(position [ {csChair}; student ] departments, type [ {transcript}]; {read}; )
rule(position [ {admissions}; type [ {application}]; {setStatus, read}; )
rule(position [ {faculty}, department [ {ee}; crsTaught ] crs, type [ {gradebook}]; {readScore, addScore, assignGrade, changeScore}; departments ] departments)
rule(position [ {faculty}, department [ {cs}; crsTaught ] crs, type [ {gradebook}]; {readScore, addScore, assignGrade, changeScore}; departments ] departments)
rule(position [ {faculty}, department [ {ee}; crsTaught ] crs, type [ {roster}]; {read}; departments ] departments)
rule(position [ {faculty}, department [ {cs}; crsTaught ] crs, type [ {roster}]; {read}; departments ] departments)
rule(position [ {student}, department [ {cs}; crsTaken ] crs, type [ {gradebook}]; {readScore, addScore, readMyScores}; departments ] departments)
rule(position [ {student}, department [ {ee}; crsTaken ] crs, type [ {gradebook}]; {readScore, addScore, readMyScores}; departments ] departments)
rule(position [ {staff}, department [ {registrar}; type [ {roster}]; {write, read}; )
rule(position [ {applicant}; type [ {application}]; {checkStatus}; student = uid)
rule(position [ {student}; type [ {application}]; {checkStatus}; student = uid)
rule(position [ {student}; type [ {transcript}]; {read}; student = uid)
