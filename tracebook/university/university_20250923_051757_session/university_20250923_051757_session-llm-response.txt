rule(position [ {registrar}; student = student, type [ {transcript}, departments ] departments; {read};)
rule(position [ {csChair}; student = student, department [ {cs}, type [ {transcript}, departments ] departments; {read};)
rule(position [ {eeChair}; student = student, department [ {ee}, type [ {transcript}, departments ] departments; {read};)
rule(position [ {student}, uid = student; uid = student, type [ {transcript}, departments ] departments; {read};)
rule(position [ {csStu2}; type [ {gradebook}, crs [ {cs602}, departments ] {cs}; {readScore, addScore};)
rule(position [ {faculty}, department [ {ee}; type [ {gradebook}, crs [ {ee101}, departments ] {ee}; {readScore, assignGrade, addScore, changeScore};)
rule(position [ {faculty}, department [ {cs}; type [ {roster}, crs [ {cs101}, departments ] {cs}; {read, addScore, assignGrade, changeScore};)
rule(position [ {faculty}, department [ {ee}; type [ {roster}, crs [ {ee601}, departments ] {ee}; {read};)
rule(position [ {student}, crsTaught ] crs; departments ] departments, crs = crs, type [ {gradebook}; {readScore, addScore};)
rule(position [ {student}, crsTaken ] crs; departments ] departments, crs = crs, type [ {gradebook}; {readMyScores};)
rule(position [ {staff}, department [ {registrar}; crs = crs, type [ {roster}, departments ] departments; {write, read};)
rule(position [ {staff}, department [ {admissions}; student = student, type [ {application}; {read, setStatus};)
rule(position [ {student}, type [ {application}; student = uid; {checkStatus};)
