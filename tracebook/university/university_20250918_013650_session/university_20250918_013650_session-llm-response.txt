rule(position [ {registrar}; student ] departments, type [ {transcript}]; {read}; )
rule(position [ {csChair}; student ] departments, type [ {transcript}]; {read}; department = cs)
rule(position [ {staff}; type [ {roster}]; {write}; department = registrar)
rule(position [ {faculty}; type [ {roster}]; {read}; crs ] crsTaught; department = departments)
rule(position [ {faculty}; type [ {gradebook}]; {readScore, addScore, changeScore, assignGrade}; crs ] crsTaught; department = departments)
rule(position [ {student}; type [ {gradebook}]; {readScore, addScore}; crs ] crsTaught; crs ] crsTaken)
rule(position [ {student}; type [ {gradebook}]; {readMyScores}; crs ] crsTaken; crs = crs)
rule(position [ {student}; type [ {transcript}]; student = uid; department = departments; {read}; )
rule(position [ {applicant, student}; type [ {application}]; student = uid; {checkStatus}; )
rule(position [ {applicant, student}; type [ {application}]; department = departments; {setStatus}; department = department)
rule(position [ {staff}; type [ {roster}]; {read}; department = registrar)
rule(position [ {staff}; type [ {gradebook}]; departments = department; {write}; department = admissions)
rule(position [ {staff}; type [ {application}]; {read, setStatus}; department = admissions)
