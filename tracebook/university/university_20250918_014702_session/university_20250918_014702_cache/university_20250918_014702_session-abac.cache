
===============================================================
ITERATION : 4
===============================================================
# ABAC policy for a university.

# Note that the two words "user" and "subject" are used interchangeably in this document.

# Please refer to the policy description document for the detailed descriptions subject attributes and resource attributes. Note that some attributes might be irrelevant for some users and resources.

#------------------------------------------------------------
# user attribute data
#------------------------------------------------------------

# applicants for admission to the university

userAttrib(applicant1, position=applicant)
userAttrib(applicant2, position=applicant)

# students

userAttrib(csStu1, position=student, department=cs, crsTaken={cs101})
userAttrib(csStu2, position=student, department=cs, crsTaken={cs601}, crsTaught={cs101 cs602})
userAttrib(csStu3, position=student, department=cs, crsTaken={cs602}, crsTaught={cs601})
userAttrib(csStu4, position=student, department=cs, crsTaken={cs601})
userAttrib(csStu5, position=student, department=cs, crsTaken={cs601 cs602})

userAttrib(eeStu1, position=student, department=ee, crsTaken={ee101})
userAttrib(eeStu2, position=student, department=ee, crsTaken={ee601}, crsTaught={ee101 ee602})
userAttrib(eeStu3, position=student, department=ee, crsTaken={ee602}, crsTaught={ee601})
userAttrib(eeStu4, position=student, department=ee, crsTaken={ee601})
userAttrib(eeStu5, position=student, department=ee, crsTaken={ee601 ee602})

# faculty

userAttrib(csFac1, position=faculty, department=cs, crsTaught={cs101})
userAttrib(csFac2, position=faculty, department=cs, crsTaught={cs601})
userAttrib(csChair, isChair=True, department=cs)

userAttrib(eeFac1, position=faculty, department=ee, crsTaught={ee101})
userAttrib(eeFac2, position=faculty, department=ee, crsTaught={ee601})
userAttrib(eeChair, isChair=True, department=ee)

# staff

userAttrib(registrar1, position=staff, department=registrar)
userAttrib(registrar2, position=staff, department=registrar)

userAttrib(admissions1, position=staff, department=admissions)
userAttrib(admissions2, position=staff, department=admissions)

#------------------------------------------------------------
# resource attribute data
#------------------------------------------------------------

# applications.  applications exist for applicants and students (accepted
# applicants).

resourceAttrib(application1, type=application, student=applicant1)
resourceAttrib(application2, type=application, student=applicant2)

resourceAttrib(csStu1application, type=application, student=csStu1)
resourceAttrib(csStu2application, type=application, student=csStu2)
resourceAttrib(csStu3application, type=application, student=csStu3)
resourceAttrib(csStu4application, type=application, student=csStu4)
resourceAttrib(csStu5application, type=application, student=csStu5)

resourceAttrib(eeStu1application, type=application, student=eeStu1)
resourceAttrib(eeStu2application, type=application, student=eeStu2)
resourceAttrib(eeStu3application, type=application, student=eeStu3)
resourceAttrib(eeStu4application, type=application, student=eeStu4)
resourceAttrib(eeStu5application, type=application, student=eeStu5)

# gradebooks

resourceAttrib(cs101gradebook, departments={cs}, crs=cs101, type=gradebook)
resourceAttrib(cs601gradebook, departments={cs}, crs=cs601, type=gradebook)
resourceAttrib(cs602gradebook, departments={cs}, crs=cs602, type=gradebook)

resourceAttrib(ee101gradebook, departments={ee}, crs=ee101, type=gradebook)
resourceAttrib(ee601gradebook, departments={ee}, crs=ee601, type=gradebook)
resourceAttrib(ee602gradebook, departments={ee}, crs=ee602, type=gradebook)

# rosters

resourceAttrib(cs101roster, departments={cs}, crs=cs101, type=roster)
resourceAttrib(cs601roster, departments={cs}, crs=cs601, type=roster)
resourceAttrib(cs602roster, departments={cs}, crs=cs602, type=roster)

resourceAttrib(ee101roster, departments={ee}, crs=ee101, type=roster)
resourceAttrib(ee601roster, departments={ee}, crs=ee601, type=roster)
resourceAttrib(ee602roster, departments={ee}, crs=ee602, type=roster)

# transcripts

resourceAttrib(csStu1trans, student=csStu1, departments={cs}, type=transcript)
resourceAttrib(csStu2trans, student=csStu2, departments={cs}, type=transcript)
resourceAttrib(csStu3trans, student=csStu3, departments={cs}, type=transcript)
resourceAttrib(csStu4trans, student=csStu4, departments={cs}, type=transcript)
resourceAttrib(csStu5trans, student=csStu5, departments={cs}, type=transcript)

resourceAttrib(eeStu1trans, student=eeStu1, departments={ee}, type=transcript)
resourceAttrib(eeStu2trans, student=eeStu2, departments={ee}, type=transcript)
resourceAttrib(eeStu3trans, student=eeStu3, departments={ee}, type=transcript)
resourceAttrib(eeStu4trans, student=eeStu4, departments={ee}, type=transcript)
resourceAttrib(eeStu5trans, student=eeStu5, departments={ee}, type=transcript)

rule(position [ {registrar}; type [ {transcript}; acts [ {read}; departments = departments)
rule(position [ {csChair}; type [ {transcript}; acts [ {read}; departments = departments)
rule(position [ {eeChair}; type [ {transcript}; acts [ {read}; departments = departments)
rule(position [ {student}, uid ] student; type [ {transcript}; acts [ {read}; student = student)
rule(position [ {faculty}; type [ {gradebook}; acts [ {readScore, addScore, changeScore, assignGrade}; crs ] crs)
rule(position [ {student}; type [ {gradebook}; acts [ {readMyScores}; crs ] crs, crsTaken ] crs)
rule(position [ {staff}, department [ {admissions}; type [ {application}; acts [ {setStatus};)
rule(position [ {staff}, department [ {admissions}; type [ {application}; acts [ {read};)
rule(position [ {applicant}; type [ {application}; acts [ {checkStatus}; student = uid)
rule(position [ {student}; type [ {application}; acts [ {checkStatus}; student = uid)
rule(position [ {faculty}; type [ {roster}; acts [ {read}; crs ] crs)
rule(position [ {staff}, department [ {registrar}; type [ {roster}; acts [ {read, write}; departments = departments)

===============================================================
ITERATION : 3
===============================================================
# ABAC policy for a university.

# Note that the two words "user" and "subject" are used interchangeably in this document.

# Please refer to the policy description document for the detailed descriptions subject attributes and resource attributes. Note that some attributes might be irrelevant for some users and resources.

#------------------------------------------------------------
# user attribute data
#------------------------------------------------------------

# applicants for admission to the university

userAttrib(applicant1, position=applicant)
userAttrib(applicant2, position=applicant)

# students

userAttrib(csStu1, position=student, department=cs, crsTaken={cs101})
userAttrib(csStu2, position=student, department=cs, crsTaken={cs601}, crsTaught={cs101 cs602})
userAttrib(csStu3, position=student, department=cs, crsTaken={cs602}, crsTaught={cs601})
userAttrib(csStu4, position=student, department=cs, crsTaken={cs601})
userAttrib(csStu5, position=student, department=cs, crsTaken={cs601 cs602})

userAttrib(eeStu1, position=student, department=ee, crsTaken={ee101})
userAttrib(eeStu2, position=student, department=ee, crsTaken={ee601}, crsTaught={ee101 ee602})
userAttrib(eeStu3, position=student, department=ee, crsTaken={ee602}, crsTaught={ee601})
userAttrib(eeStu4, position=student, department=ee, crsTaken={ee601})
userAttrib(eeStu5, position=student, department=ee, crsTaken={ee601 ee602})

# faculty

userAttrib(csFac1, position=faculty, department=cs, crsTaught={cs101})
userAttrib(csFac2, position=faculty, department=cs, crsTaught={cs601})
userAttrib(csChair, isChair=True, department=cs)

userAttrib(eeFac1, position=faculty, department=ee, crsTaught={ee101})
userAttrib(eeFac2, position=faculty, department=ee, crsTaught={ee601})
userAttrib(eeChair, isChair=True, department=ee)

# staff

userAttrib(registrar1, position=staff, department=registrar)
userAttrib(registrar2, position=staff, department=registrar)

userAttrib(admissions1, position=staff, department=admissions)
userAttrib(admissions2, position=staff, department=admissions)

#------------------------------------------------------------
# resource attribute data
#------------------------------------------------------------

# applications.  applications exist for applicants and students (accepted
# applicants).

resourceAttrib(application1, type=application, student=applicant1)
resourceAttrib(application2, type=application, student=applicant2)

resourceAttrib(csStu1application, type=application, student=csStu1)
resourceAttrib(csStu2application, type=application, student=csStu2)
resourceAttrib(csStu3application, type=application, student=csStu3)
resourceAttrib(csStu4application, type=application, student=csStu4)
resourceAttrib(csStu5application, type=application, student=csStu5)

resourceAttrib(eeStu1application, type=application, student=eeStu1)
resourceAttrib(eeStu2application, type=application, student=eeStu2)
resourceAttrib(eeStu3application, type=application, student=eeStu3)
resourceAttrib(eeStu4application, type=application, student=eeStu4)
resourceAttrib(eeStu5application, type=application, student=eeStu5)

# gradebooks

resourceAttrib(cs101gradebook, departments={cs}, crs=cs101, type=gradebook)
resourceAttrib(cs601gradebook, departments={cs}, crs=cs601, type=gradebook)
resourceAttrib(cs602gradebook, departments={cs}, crs=cs602, type=gradebook)

resourceAttrib(ee101gradebook, departments={ee}, crs=ee101, type=gradebook)
resourceAttrib(ee601gradebook, departments={ee}, crs=ee601, type=gradebook)
resourceAttrib(ee602gradebook, departments={ee}, crs=ee602, type=gradebook)

# rosters

resourceAttrib(cs101roster, departments={cs}, crs=cs101, type=roster)
resourceAttrib(cs601roster, departments={cs}, crs=cs601, type=roster)
resourceAttrib(cs602roster, departments={cs}, crs=cs602, type=roster)

resourceAttrib(ee101roster, departments={ee}, crs=ee101, type=roster)
resourceAttrib(ee601roster, departments={ee}, crs=ee601, type=roster)
resourceAttrib(ee602roster, departments={ee}, crs=ee602, type=roster)

# transcripts

resourceAttrib(csStu1trans, student=csStu1, departments={cs}, type=transcript)
resourceAttrib(csStu2trans, student=csStu2, departments={cs}, type=transcript)
resourceAttrib(csStu3trans, student=csStu3, departments={cs}, type=transcript)
resourceAttrib(csStu4trans, student=csStu4, departments={cs}, type=transcript)
resourceAttrib(csStu5trans, student=csStu5, departments={cs}, type=transcript)

resourceAttrib(eeStu1trans, student=eeStu1, departments={ee}, type=transcript)
resourceAttrib(eeStu2trans, student=eeStu2, departments={ee}, type=transcript)
resourceAttrib(eeStu3trans, student=eeStu3, departments={ee}, type=transcript)
resourceAttrib(eeStu4trans, student=eeStu4, departments={ee}, type=transcript)
resourceAttrib(eeStu5trans, student=eeStu5, departments={ee}, type=transcript)

rule(position [ {registrar}; type [ {transcript}; acts={read}; departments = departments)
rule(position [ {csChair}; type [ {transcript}; acts={read}; departments = {cs})
rule(position [ {eeChair}; type [ {transcript}; acts={read}; departments = {ee})
rule(position [ {student}, uid = student; type [ {transcript}; acts={read}; departments = departments)
rule(position [ {faculty}; crsTaught ] crs; type [ {gradebook}; acts={addScore, changeScore, readScore, assignGrade}; crs = crs)
rule(position [ {staff}, department [ {registrar}; type [ {roster}; acts={write, read}; departments = departments)
rule(position [ {faculty}; crsTaught ] crs; type [ {roster}; acts={read}; crs = crs)
rule(position [ {student}; crsTaken ] crs; type [ {gradebook}; acts={readScore}; crs = crs)
rule(position [ {student}, uid = student; type [ {application}; acts={checkStatus})
rule(position [ {applicant}, uid = student; type [ {application}; acts={checkStatus})
rule(position [ {student}; crsTaken ] crs; type [ {gradebook}; acts={readMyScores}; crs = crs)
rule(position [ {staff}, department [ {admissions}; type [ {application}; acts={setStatus, read})
rule(position [ {student}; type [ {application}; acts={checkStatus}; student = uid)

===============================================================
ITERATION : 2
===============================================================
# ABAC policy for a university.

# Note that the two words "user" and "subject" are used interchangeably in this document.

# Please refer to the policy description document for the detailed descriptions subject attributes and resource attributes. Note that some attributes might be irrelevant for some users and resources.

#------------------------------------------------------------
# user attribute data
#------------------------------------------------------------

# applicants for admission to the university

userAttrib(applicant1, position=applicant)
userAttrib(applicant2, position=applicant)

# students

userAttrib(csStu1, position=student, department=cs, crsTaken={cs101})
userAttrib(csStu2, position=student, department=cs, crsTaken={cs601}, crsTaught={cs101 cs602})
userAttrib(csStu3, position=student, department=cs, crsTaken={cs602}, crsTaught={cs601})
userAttrib(csStu4, position=student, department=cs, crsTaken={cs601})
userAttrib(csStu5, position=student, department=cs, crsTaken={cs601 cs602})

userAttrib(eeStu1, position=student, department=ee, crsTaken={ee101})
userAttrib(eeStu2, position=student, department=ee, crsTaken={ee601}, crsTaught={ee101 ee602})
userAttrib(eeStu3, position=student, department=ee, crsTaken={ee602}, crsTaught={ee601})
userAttrib(eeStu4, position=student, department=ee, crsTaken={ee601})
userAttrib(eeStu5, position=student, department=ee, crsTaken={ee601 ee602})

# faculty

userAttrib(csFac1, position=faculty, department=cs, crsTaught={cs101})
userAttrib(csFac2, position=faculty, department=cs, crsTaught={cs601})
userAttrib(csChair, isChair=True, department=cs)

userAttrib(eeFac1, position=faculty, department=ee, crsTaught={ee101})
userAttrib(eeFac2, position=faculty, department=ee, crsTaught={ee601})
userAttrib(eeChair, isChair=True, department=ee)

# staff

userAttrib(registrar1, position=staff, department=registrar)
userAttrib(registrar2, position=staff, department=registrar)

userAttrib(admissions1, position=staff, department=admissions)
userAttrib(admissions2, position=staff, department=admissions)

#------------------------------------------------------------
# resource attribute data
#------------------------------------------------------------

# applications.  applications exist for applicants and students (accepted
# applicants).

resourceAttrib(application1, type=application, student=applicant1)
resourceAttrib(application2, type=application, student=applicant2)

resourceAttrib(csStu1application, type=application, student=csStu1)
resourceAttrib(csStu2application, type=application, student=csStu2)
resourceAttrib(csStu3application, type=application, student=csStu3)
resourceAttrib(csStu4application, type=application, student=csStu4)
resourceAttrib(csStu5application, type=application, student=csStu5)

resourceAttrib(eeStu1application, type=application, student=eeStu1)
resourceAttrib(eeStu2application, type=application, student=eeStu2)
resourceAttrib(eeStu3application, type=application, student=eeStu3)
resourceAttrib(eeStu4application, type=application, student=eeStu4)
resourceAttrib(eeStu5application, type=application, student=eeStu5)

# gradebooks

resourceAttrib(cs101gradebook, departments={cs}, crs=cs101, type=gradebook)
resourceAttrib(cs601gradebook, departments={cs}, crs=cs601, type=gradebook)
resourceAttrib(cs602gradebook, departments={cs}, crs=cs602, type=gradebook)

resourceAttrib(ee101gradebook, departments={ee}, crs=ee101, type=gradebook)
resourceAttrib(ee601gradebook, departments={ee}, crs=ee601, type=gradebook)
resourceAttrib(ee602gradebook, departments={ee}, crs=ee602, type=gradebook)

# rosters

resourceAttrib(cs101roster, departments={cs}, crs=cs101, type=roster)
resourceAttrib(cs601roster, departments={cs}, crs=cs601, type=roster)
resourceAttrib(cs602roster, departments={cs}, crs=cs602, type=roster)

resourceAttrib(ee101roster, departments={ee}, crs=ee101, type=roster)
resourceAttrib(ee601roster, departments={ee}, crs=ee601, type=roster)
resourceAttrib(ee602roster, departments={ee}, crs=ee602, type=roster)

# transcripts

resourceAttrib(csStu1trans, student=csStu1, departments={cs}, type=transcript)
resourceAttrib(csStu2trans, student=csStu2, departments={cs}, type=transcript)
resourceAttrib(csStu3trans, student=csStu3, departments={cs}, type=transcript)
resourceAttrib(csStu4trans, student=csStu4, departments={cs}, type=transcript)
resourceAttrib(csStu5trans, student=csStu5, departments={cs}, type=transcript)

resourceAttrib(eeStu1trans, student=eeStu1, departments={ee}, type=transcript)
resourceAttrib(eeStu2trans, student=eeStu2, departments={ee}, type=transcript)
resourceAttrib(eeStu3trans, student=eeStu3, departments={ee}, type=transcript)
resourceAttrib(eeStu4trans, student=eeStu4, departments={ee}, type=transcript)
resourceAttrib(eeStu5trans, student=eeStu5, departments={ee}, type=transcript)

rule(position [ {registrar}; student = student, departments ] departments, type [ {transcript}; {read}; )
rule(position [ {csChair}; student = student, departments [ {cs}, type [ {transcript}; {read}; )
rule(position [ {eeChair}; student = student, departments [ {ee}, type [ {transcript}; {read}; )
rule(position [ {student}, department [ {cs}; type [ {gradebook}, crs = crs; {readScore addScore changeScore assignGrade}, crsTaken ] crs )
rule(position [ {student}, department [ {cs}; type [ {gradebook}, crs = crs; {readMyScores}; crsTaken ] crs )
rule(position [ {student}, department [ {ee}; type [ {gradebook}, crs = crs; {readScore addScore changeScore assignGrade}, crsTaken ] crs )
rule(position [ {student}, department [ {ee}; type [ {gradebook}, crs = crs; {readMyScores}; crsTaken ] crs )
rule(position [ {faculty}, department [ {cs}; type [ {roster gradebook}], crs = crs, departments [ {cs}; {read readScore addScore changeScore assignGrade}; crsTaught ] crs )
rule(position [ {faculty}, department [ {ee}; type [ {roster gradebook}], crs = crs, departments [ {ee}; {read readScore addScore changeScore assignGrade}; crsTaught ] crs )
rule(position [ {staff}, department [ {registrar}; type [ {roster}; {read write}; departments ] departments )
rule(position [ {applicant student}; type [ {application}; {checkStatus}; student = student )
rule(position [ {staff}, department [ {admissions}; type [ {application}; {read setStatus}; student = student )

===============================================================
ITERATION : 1
===============================================================
# ABAC policy for a university.

# Note that the two words "user" and "subject" are used interchangeably in this document.

# Please refer to the policy description document for the detailed descriptions subject attributes and resource attributes. Note that some attributes might be irrelevant for some users and resources.

#------------------------------------------------------------
# user attribute data
#------------------------------------------------------------

# applicants for admission to the university

userAttrib(applicant1, position=applicant)
userAttrib(applicant2, position=applicant)

# students

userAttrib(csStu1, position=student, department=cs, crsTaken={cs101})
userAttrib(csStu2, position=student, department=cs, crsTaken={cs601}, crsTaught={cs101 cs602})
userAttrib(csStu3, position=student, department=cs, crsTaken={cs602}, crsTaught={cs601})
userAttrib(csStu4, position=student, department=cs, crsTaken={cs601})
userAttrib(csStu5, position=student, department=cs, crsTaken={cs601 cs602})

userAttrib(eeStu1, position=student, department=ee, crsTaken={ee101})
userAttrib(eeStu2, position=student, department=ee, crsTaken={ee601}, crsTaught={ee101 ee602})
userAttrib(eeStu3, position=student, department=ee, crsTaken={ee602}, crsTaught={ee601})
userAttrib(eeStu4, position=student, department=ee, crsTaken={ee601})
userAttrib(eeStu5, position=student, department=ee, crsTaken={ee601 ee602})

# faculty

userAttrib(csFac1, position=faculty, department=cs, crsTaught={cs101})
userAttrib(csFac2, position=faculty, department=cs, crsTaught={cs601})
userAttrib(csChair, isChair=True, department=cs)

userAttrib(eeFac1, position=faculty, department=ee, crsTaught={ee101})
userAttrib(eeFac2, position=faculty, department=ee, crsTaught={ee601})
userAttrib(eeChair, isChair=True, department=ee)

# staff

userAttrib(registrar1, position=staff, department=registrar)
userAttrib(registrar2, position=staff, department=registrar)

userAttrib(admissions1, position=staff, department=admissions)
userAttrib(admissions2, position=staff, department=admissions)

#------------------------------------------------------------
# resource attribute data
#------------------------------------------------------------

# applications.  applications exist for applicants and students (accepted
# applicants).

resourceAttrib(application1, type=application, student=applicant1)
resourceAttrib(application2, type=application, student=applicant2)

resourceAttrib(csStu1application, type=application, student=csStu1)
resourceAttrib(csStu2application, type=application, student=csStu2)
resourceAttrib(csStu3application, type=application, student=csStu3)
resourceAttrib(csStu4application, type=application, student=csStu4)
resourceAttrib(csStu5application, type=application, student=csStu5)

resourceAttrib(eeStu1application, type=application, student=eeStu1)
resourceAttrib(eeStu2application, type=application, student=eeStu2)
resourceAttrib(eeStu3application, type=application, student=eeStu3)
resourceAttrib(eeStu4application, type=application, student=eeStu4)
resourceAttrib(eeStu5application, type=application, student=eeStu5)

# gradebooks

resourceAttrib(cs101gradebook, departments={cs}, crs=cs101, type=gradebook)
resourceAttrib(cs601gradebook, departments={cs}, crs=cs601, type=gradebook)
resourceAttrib(cs602gradebook, departments={cs}, crs=cs602, type=gradebook)

resourceAttrib(ee101gradebook, departments={ee}, crs=ee101, type=gradebook)
resourceAttrib(ee601gradebook, departments={ee}, crs=ee601, type=gradebook)
resourceAttrib(ee602gradebook, departments={ee}, crs=ee602, type=gradebook)

# rosters

resourceAttrib(cs101roster, departments={cs}, crs=cs101, type=roster)
resourceAttrib(cs601roster, departments={cs}, crs=cs601, type=roster)
resourceAttrib(cs602roster, departments={cs}, crs=cs602, type=roster)

resourceAttrib(ee101roster, departments={ee}, crs=ee101, type=roster)
resourceAttrib(ee601roster, departments={ee}, crs=ee601, type=roster)
resourceAttrib(ee602roster, departments={ee}, crs=ee602, type=roster)

# transcripts

resourceAttrib(csStu1trans, student=csStu1, departments={cs}, type=transcript)
resourceAttrib(csStu2trans, student=csStu2, departments={cs}, type=transcript)
resourceAttrib(csStu3trans, student=csStu3, departments={cs}, type=transcript)
resourceAttrib(csStu4trans, student=csStu4, departments={cs}, type=transcript)
resourceAttrib(csStu5trans, student=csStu5, departments={cs}, type=transcript)

resourceAttrib(eeStu1trans, student=eeStu1, departments={ee}, type=transcript)
resourceAttrib(eeStu2trans, student=eeStu2, departments={ee}, type=transcript)
resourceAttrib(eeStu3trans, student=eeStu3, departments={ee}, type=transcript)
resourceAttrib(eeStu4trans, student=eeStu4, departments={ee}, type=transcript)
resourceAttrib(eeStu5trans, student=eeStu5, departments={ee}, type=transcript)

rule(position [ {registrar}; student = student, type [ {transcript}, departments ] departments; {read}; )
rule(position [ {csStu2}; type [ {gradebook}, crs ] crs, departments [ {cs}; {readScore, addScore}; )
rule(isChair [ {True}; type [ {transcript}, student ] student; {read}; )
rule(uid = student; type [ {transcript}, student ] student; {read}; )
rule(position [ {registrar}; type [ {roster}, crs ] crs, departments [ {cs}; {write}; )
rule(position [ {student}; type [ {transcript}, student ] student; {read}; )
rule(position [ {staff}; type [ {application}, student ] student; {setStatus, read}; )
rule(position [ {faculty}; type [ {gradebook}, crs ] crs, departments ] departments; {readScore, assignGrade, addScore, changeScore}; )
rule(position [ {faculty}; type [ {roster}, crs ] crs, departments ] departments; {read}; )
rule(position [ {student}, department ] departments, crsTaken ] crs; type [ {gradebook}, crs ] crs, departments [ {cs, ee}; {readMyScores}; )
rule(uid = student; type [ {application}, student ] student; {checkStatus}; )
rule(position [ {registrar}; type [ {roster}, crs ] crs, departments [ {cs, ee}; {read}; )
rule(position [ {student}, department ] departments; type [ {transcript}, student ] student; {read}; )
rule(position [ {applicant}; type [ {application}, student ] student; {checkStatus}; )
rule(position [ {student}, department ] departments, crsTaken ] crs; type [ {gradebook}, crs ] crs, departments [ {cs, ee}; {addScore}; )

===============================================================
ITERATION : 0
===============================================================
# ABAC policy for a university.

# Note that the two words "user" and "subject" are used interchangeably in this document.

# Please refer to the policy description document for the detailed descriptions subject attributes and resource attributes. Note that some attributes might be irrelevant for some users and resources.

#------------------------------------------------------------
# user attribute data
#------------------------------------------------------------

# applicants for admission to the university

userAttrib(applicant1, position=applicant)
userAttrib(applicant2, position=applicant)

# students

userAttrib(csStu1, position=student, department=cs, crsTaken={cs101})
userAttrib(csStu2, position=student, department=cs, crsTaken={cs601}, crsTaught={cs101 cs602})
userAttrib(csStu3, position=student, department=cs, crsTaken={cs602}, crsTaught={cs601})
userAttrib(csStu4, position=student, department=cs, crsTaken={cs601})
userAttrib(csStu5, position=student, department=cs, crsTaken={cs601 cs602})

userAttrib(eeStu1, position=student, department=ee, crsTaken={ee101})
userAttrib(eeStu2, position=student, department=ee, crsTaken={ee601}, crsTaught={ee101 ee602})
userAttrib(eeStu3, position=student, department=ee, crsTaken={ee602}, crsTaught={ee601})
userAttrib(eeStu4, position=student, department=ee, crsTaken={ee601})
userAttrib(eeStu5, position=student, department=ee, crsTaken={ee601 ee602})

# faculty

userAttrib(csFac1, position=faculty, department=cs, crsTaught={cs101})
userAttrib(csFac2, position=faculty, department=cs, crsTaught={cs601})
userAttrib(csChair, isChair=True, department=cs)

userAttrib(eeFac1, position=faculty, department=ee, crsTaught={ee101})
userAttrib(eeFac2, position=faculty, department=ee, crsTaught={ee601})
userAttrib(eeChair, isChair=True, department=ee)

# staff

userAttrib(registrar1, position=staff, department=registrar)
userAttrib(registrar2, position=staff, department=registrar)

userAttrib(admissions1, position=staff, department=admissions)
userAttrib(admissions2, position=staff, department=admissions)

#------------------------------------------------------------
# resource attribute data
#------------------------------------------------------------

# applications.  applications exist for applicants and students (accepted
# applicants).

resourceAttrib(application1, type=application, student=applicant1)
resourceAttrib(application2, type=application, student=applicant2)

resourceAttrib(csStu1application, type=application, student=csStu1)
resourceAttrib(csStu2application, type=application, student=csStu2)
resourceAttrib(csStu3application, type=application, student=csStu3)
resourceAttrib(csStu4application, type=application, student=csStu4)
resourceAttrib(csStu5application, type=application, student=csStu5)

resourceAttrib(eeStu1application, type=application, student=eeStu1)
resourceAttrib(eeStu2application, type=application, student=eeStu2)
resourceAttrib(eeStu3application, type=application, student=eeStu3)
resourceAttrib(eeStu4application, type=application, student=eeStu4)
resourceAttrib(eeStu5application, type=application, student=eeStu5)

# gradebooks

resourceAttrib(cs101gradebook, departments={cs}, crs=cs101, type=gradebook)
resourceAttrib(cs601gradebook, departments={cs}, crs=cs601, type=gradebook)
resourceAttrib(cs602gradebook, departments={cs}, crs=cs602, type=gradebook)

resourceAttrib(ee101gradebook, departments={ee}, crs=ee101, type=gradebook)
resourceAttrib(ee601gradebook, departments={ee}, crs=ee601, type=gradebook)
resourceAttrib(ee602gradebook, departments={ee}, crs=ee602, type=gradebook)

# rosters

resourceAttrib(cs101roster, departments={cs}, crs=cs101, type=roster)
resourceAttrib(cs601roster, departments={cs}, crs=cs601, type=roster)
resourceAttrib(cs602roster, departments={cs}, crs=cs602, type=roster)

resourceAttrib(ee101roster, departments={ee}, crs=ee101, type=roster)
resourceAttrib(ee601roster, departments={ee}, crs=ee601, type=roster)
resourceAttrib(ee602roster, departments={ee}, crs=ee602, type=roster)

# transcripts

resourceAttrib(csStu1trans, student=csStu1, departments={cs}, type=transcript)
resourceAttrib(csStu2trans, student=csStu2, departments={cs}, type=transcript)
resourceAttrib(csStu3trans, student=csStu3, departments={cs}, type=transcript)
resourceAttrib(csStu4trans, student=csStu4, departments={cs}, type=transcript)
resourceAttrib(csStu5trans, student=csStu5, departments={cs}, type=transcript)

resourceAttrib(eeStu1trans, student=eeStu1, departments={ee}, type=transcript)
resourceAttrib(eeStu2trans, student=eeStu2, departments={ee}, type=transcript)
resourceAttrib(eeStu3trans, student=eeStu3, departments={ee}, type=transcript)
resourceAttrib(eeStu4trans, student=eeStu4, departments={ee}, type=transcript)
resourceAttrib(eeStu5trans, student=eeStu5, departments={ee}, type=transcript)

rule(position [ {registrar}; student = student, type [ {transcript}, departments ] departments; {read};)
rule(position [ {csChair}; student = student, type [ {transcript}, departments ] {cs}; {read};)
rule(position [ {eeChair}; student = student, type [ {transcript}, departments ] {ee}; {read};)
rule(position [ {student}, department ] {cs}; crs = crs, type [ {gradebook}; {readScore, addScore, readMyScores};)
rule(position [ {student}, department ] {ee}; crs = crs, type [ {gradebook}; {readScore, addScore, readMyScores};)
rule(position [ {faculty}, department ] {cs}; crs = crs, type [ {roster}; {read, write};)
rule(position [ {faculty}, department ] {ee}; crs = crs, type [ {roster}; {read, write};)
rule(position [ {faculty}, department ] {cs}; crs = crs, type [ {gradebook}; {readScore, addScore, changeScore, assignGrade};)
rule(position [ {faculty}, department ] {ee}; crs = crs, type [ {gradebook}; {readScore, addScore, changeScore, assignGrade};)
rule(position [ {applicant, student}; student = student, type [ {application}; {checkStatus};)
rule(position [ {staff}, department ] {admissions}; student = student, type [ {application}; {read, setStatus};)
rule(position [ {student}; student = student, type [ {transcript}; {read};)
rule(position [ {student}; student = student, type [ {application}; {checkStatus};)
