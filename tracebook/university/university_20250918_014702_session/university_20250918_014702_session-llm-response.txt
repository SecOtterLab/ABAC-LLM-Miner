rule(position [ {registrar}; type [ {transcript}; acts [ {read}; departments = departments)
rule(position [ {csChair}; type [ {transcript}; acts [ {read}; departments = departments)
rule(position [ {eeChair}; type [ {transcript}; acts [ {read}; departments = departments)
rule(position [ {student}, uid ] student; type [ {transcript}; acts [ {read}; student = student)
rule(position [ {faculty}; type [ {gradebook}; acts [ {readScore, addScore, changeScore, assignGrade}; crs ] crs)
rule(position [ {student}; type [ {gradebook}; acts [ {readMyScores}; crs ] crs, crsTaken ] crs)
rule(position [ {staff}, department [ {admissions}; type [ {application}; acts [ {setStatus};)
rule(position [ {staff}, department [ {admissions}; type [ {application}; acts [ {read};)
rule(position [ {applicant}; type [ {application}; acts [ {checkStatus}; student = uid)
rule(position [ {student}; type [ {application}; acts [ {checkStatus}; student = uid)
rule(position [ {faculty}; type [ {roster}; acts [ {read}; crs ] crs)
rule(position [ {staff}, department [ {registrar}; type [ {roster}; acts [ {read, write}; departments = departments)
