rule(position [ {helpdeskOperator}, department [ {helpdesk}; type [ {workOrder}; modify]) : ('rule(provider [ {eWorkforce}, position [ {helpdeskOperator}; type [ {contract}, contractStatus [ {active}, tenantType [ {primary}; {createOneTimeWorkOrder createRecurrentWorkOrder}; assignedTenant = tenant)', 0.0)
rule(position [ {technician}; type [ {task}; view]) : ('rule(provider [ {eWorkforce}, position [ {helpdeskOperator}; type [ {contract}, contractStatus [ {active}, tenantType [ {primary}; {createOneTimeWorkOrder createRecurrentWorkOrder}; assignedTenant = tenant)', 0.0)
rule(position [ {workforceManager}; type [ {task}; view]) : ('rule(provider [ {eWorkforce}, position [ {helpdeskOperator}; type [ {contract}, contractStatus [ {active}, tenantType [ {primary}; {createOneTimeWorkOrder createRecurrentWorkOrder}; assignedTenant = tenant)', 0.0)
rule(position [ {helpdeskOperator}; type [ {contract}; {createRecurrentWorkOrder createOneTimeWorkOrder}]) : ('rule(provider [ {externalHelpdeskSupplier}, position [ {helpdeskOperator}; type [ {contract}; {createOneTimeWorkOrder createRecurrentWorkOrder}; )', 0.1390728476821192)
rule(position [ {technician}; type [ {task}; complete]) : ('rule(provider [ {eWorkforce}, position [ {helpdeskOperator}; type [ {contract}, contractStatus [ {active}, tenantType [ {primary}; {createOneTimeWorkOrder createRecurrentWorkOrder}; assignedTenant = tenant)', 0.0)
rule(position [ {workforceManager}; type [ {task}; complete]) : ('rule(provider [ {eWorkforce}, position [ {helpdeskOperator}; type [ {contract}, contractStatus [ {active}, tenantType [ {primary}; {createOneTimeWorkOrder createRecurrentWorkOrder}; assignedTenant = tenant)', 0.0)
rule(position [ {helpdeskOperator}; type [ {workOrder}; delete]) : ('rule(provider [ {eWorkforce}, position [ {helpdeskOperator}; type [ {contract}, contractStatus [ {active}, tenantType [ {primary}; {createOneTimeWorkOrder createRecurrentWorkOrder}; assignedTenant = tenant)', 0.0)
rule(provider [ {externalHelpdeskSupplier}; type [ {workOrder}; modify]) : ('rule(provider [ {eWorkforce}, position [ {helpdeskOperator}; type [ {contract}, contractStatus [ {active}, tenantType [ {primary}; {createOneTimeWorkOrder createRecurrentWorkOrder}; assignedTenant = tenant)', 0.0)
rule(position [ {salesManager}; type [ {workOrder}; view]) : ('rule(provider [ {eWorkforce}, position [ {helpdeskOperator}; type [ {contract}, contractStatus [ {active}, tenantType [ {primary}; {createOneTimeWorkOrder createRecurrentWorkOrder}; assignedTenant = tenant)', 0.0)
rule(position [ {maintenanceManager}; type [ {contract}; createRecurrentWorkOrder]) : ('rule(provider [ {eWorkforce}, position [ {helpdeskOperator}; type [ {contract}, contractStatus [ {active}, tenantType [ {primary}; {createOneTimeWorkOrder createRecurrentWorkOrder}; assignedTenant = tenant)', 0.0)
rule(position [ {warehouseManager}; type [ {stockRefillRequest}; markComplete]) : ('rule(provider [ {eWorkforce}, position [ {helpdeskOperator}; type [ {contract}, contractStatus [ {active}, tenantType [ {primary}; {createOneTimeWorkOrder createRecurrentWorkOrder}; assignedTenant = tenant)', 0.0)
rule(position [ {applicationAdmin}; type [ {contract}; createAppointment]) : ('rule(provider [ {eWorkforce}, position [ {helpdeskOperator}; type [ {contract}, contractStatus [ {active}, tenantType [ {primary}; {createOneTimeWorkOrder createRecurrentWorkOrder}; assignedTenant = tenant)', 0.0)
rule(department [ {sales}; type [ {stockRefillRequest}; receive]) : ('rule(provider [ {eWorkforce}, position [ {helpdeskOperator}; type [ {contract}, contractStatus [ {active}, tenantType [ {primary}; {createOneTimeWorkOrder createRecurrentWorkOrder}; assignedTenant = tenant)', 0.0)
rule(department [ {warehouse}; type [ {resourceRequest}; complete]; assignedTechnician = assignedTechnician) : ('rule(provider [ {eWorkforce}, position [ {helpdeskOperator}; type [ {contract}, contractStatus [ {active}, tenantType [ {primary}; {createOneTimeWorkOrder createRecurrentWorkOrder}; assignedTenant = tenant)', 0.0)
rule(department [ {workforce}; type [ {workOrder}; view]; assignedTechnician = assignedTechnician) : ('rule(provider [ {eWorkforce}, position [ {helpdeskOperator}; type [ {contract}, contractStatus [ {active}, tenantType [ {primary}; {createOneTimeWorkOrder createRecurrentWorkOrder}; assignedTenant = tenant)', 0.0)
rule(department [ {workforce}; type [ {task}; view]; associatedWorkOrder = associatedWorkOrder) : ('rule(provider [ {eWorkforce}, position [ {helpdeskOperator}; type [ {contract}, contractStatus [ {active}, tenantType [ {primary}; {createOneTimeWorkOrder createRecurrentWorkOrder}; assignedTenant = tenant)', 0.0)
rule(position [ {technician}, department [ {workforce}; type [ {workOrder}; view]; assignedTechnician = assignedTechnician) : ('rule(provider [ {eWorkforce}, position [ {helpdeskOperator}; type [ {contract}, contractStatus [ {active}, tenantType [ {primary}; {createOneTimeWorkOrder createRecurrentWorkOrder}; assignedTenant = tenant)', 0.0)
rule(position [ {workforceManager}, department [ {workforce}; type [ {workOrder}; view]; createdBy = createdBy) : ('rule(provider [ {eWorkforce}, position [ {helpdeskOperator}; type [ {contract}, contractStatus [ {active}, tenantType [ {primary}; {createOneTimeWorkOrder createRecurrentWorkOrder}; assignedTenant = tenant)', 0.0)
