
===============================================================
ITERATION : 2
===============================================================
rule(position [ {applicant} ]; type [ {application}, student = user.uid ]; checkStatus)
rule(position [ {staff}, department [ {admissions} ]; type [ {application} ]; read, setStatus)
rule(position [ {faculty} ], crsTaught [ course ]; type [ {gradebook}, crs = course ]; assignGrade, changeScore; crsTaught ] course)
rule(position [ {student} ], crsTaken [ course ]; type [ {gradebook}, crs = course ]; readMyScores, addScore)
rule(position [ {student} ]; type [ {transcript}, student = user.uid ]; read)
rule(position [ {staff}, department [ {registrar} ]; type [ {transcript}, departments [ {cs, ee} ]]; read)
rule(position [ {chair} ], department [ {cs, ee} ]; type [ {transcript}, departments = department ]; read)
rule(position [ {staff}, department [ {registrar} ]; type [ {roster}, departments [ {cs, ee} }; read, write])

===============================================================
ITERATION : 1
===============================================================
rule(position [ {applicant} ]; type [ {application}, student = user.uid ]; checkStatus)
rule(position [ {staff}, department [ {admissions} ]; type [ {application} ]; read, setStatus)
rule(position [ {faculty} ], crsTaught [ course ]; type [ {gradebook}, crs = course ]; assignGrade, changeScore; crsTaught ] course)
rule(position [ {student} ], crsTaken [ course ]; type [ {gradebook}, crs = course ]; readMyScores, addScore)
rule(position [ {student} ]; type [ {transcript}, student = user.uid ]; read)
rule(position [ {staff}, department [ {registrar} ]; type [ {transcript}, departments [ {cs, ee} ]]; read)
rule(position [ {chair} ], department [ {cs, ee} ]; type [ {transcript}, departments = department ]; read)
rule(position [ {staff}, department [ {registrar} ]; type [ {roster}, departments [ {cs, ee} }; read, write])

===============================================================
ITERATION : 0
===============================================================
rule(position [ {student}; department [ {cs} ]; type [ {transcript}, student = user.student ]; read)
rule(position [ {faculty}; department [ {cs}, crsTaught ] course; type [ {gradebook} ]; assignGrade, changeScore; crsTaught ] course)
rule(position [ {staff}, department [ {registrar} ]; type [ {roster}, departments [ {cs} ]; read, write)
