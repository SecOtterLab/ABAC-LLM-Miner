
===============================================================
ITERATION : 2
===============================================================
rule(position [ {applicant}; type [ {application}; {checkStatus}; uid = student)
rule(position [ {student}; type [ {application}; {checkStatus}; uid = student)
rule(position [ {staff}, department [ {admissions}; type [ {application}; {setStatus}; )
rule(position [ {staff}, department [ {registrar}; type [ {roster}; {read, write}; )
rule(position [ {staff}, department [ {registrar}; type [ {transcript}; {read}; )
rule(isChair = True; type [ {transcript}; {read}; departments ] department)
rule(position [ {faculty}; type [ {gradebook}; {assignGrade, readScore, changeScore, addScore}; crsTaught ] crs)
rule(position [ {faculty}; type [ {roster}; {read}; crsTaught ] crs)
rule(position [ {student}, crsTaught ] crs; type [ {gradebook}; {readScore, addScore}; )
rule(position [ {student}, crsTaken ] crs; type [ {gradebook}; {readMyScores}; )
rule(position [ {student}; type [ {transcript}; {read}; uid = student)

===============================================================
ITERATION : 1
===============================================================
rule(position [ {applicant}; type [ {application}; {checkStatus}; uid = student)
rule(position [ {student}; type [ {application}; {checkStatus}; uid = student)
rule(position [ {staff}, department [ {admissions}; type [ {application}; {read, setStatus}; )
rule(position [ {staff}, department [ {registrar}; type [ {roster}; {read, write}; )
rule(position [ {staff}, department [ {registrar}; type [ {transcript}; {read}; )
rule(isChair = True; type [ {transcript}; {read}; departments ] department)
rule(position [ {faculty}; type [ {gradebook}; {assignGrade, readScore, changeScore, addScore}; crsTaught ] crs)
rule(position [ {faculty}; type [ {roster}; {read}; crsTaught ] crs)
rule(position [ {student}, crsTaught ] crs; type [ {gradebook}; {readScore, addScore}; )
rule(position [ {student}, crsTaken ] crs; type [ {gradebook}; {readMyScores}; )
rule(position [ {student}; type [ {transcript}; {read}; uid = student)

===============================================================
ITERATION : 0
===============================================================
rule(position [ {applicant}; ; {checkStatus}; uid = student)
rule(position [ {student}; ; {checkStatus}; uid = student)
rule(position [ {staff}, department [ {admissions}; type [ {application}; ; {read, setStatus}; )
rule(position [ {staff}, department [ {registrar}; type [ {roster}; ; {read, write}; )
rule(position [ {staff}, department [ {registrar}; type [ {transcript}; ; {read}; )
rule(isChair = True; type [ {transcript}; ; {read}; departments ] department)
rule(position [ {faculty}; type [ {gradebook}; ; {assignGrade, readScore, changeScore, addScore}; crsTaught ] crs)
rule(position [ {faculty}; type [ {roster}; ; {read}; crsTaught ] crs)
rule(position [ {student}; type [ {gradebook}; ; {readScore, addScore}; crsTaught ] crs)
rule(position [ {student}; type [ {gradebook}; ; {readMyScores}; crsTaken ] crs)
