
===============================================================
ITERATION : 2
===============================================================
rule(position [ {student} ]; type [ {gradebook} ]; {readScore, addScore}; crsTaught ] crs)
rule(position [ {student} ]; type [ {gradebook} ]; {readMyScores}; crsTaken ] crs)
rule(position [ {faculty} ]; type [ {gradebook} ]; {assignGrade, changeScore, addScore, readScore}; crsTaught ] crs)
rule(isChair [ {True} ], department [ {cs} ]; type [ {transcript} ]; {read}; departments [ {cs} ])
rule(isChair [ {True} ], department [ {ee} ]; type [ {transcript} ]; {read}; departments [ {ee} ])
rule(position [ {staff} ], department [ {registrar} ]; type [ {roster} ]; {read, write}; )
rule(position [ {staff} ], department [ {registrar} ]; type [ {transcript} ]; {read}; )
rule(position [ {staff} ], department [ {admissions} ]; type [ {application} ]; {read, setStatus}; )
rule(position [ {applicant} ]; type [ {application} ]; {checkStatus}; uid = student)
rule(position [ {student} ]; type [ {application} ]; {checkStatus}; uid = student)
rule(position [ {student} ]; type [ {transcript} ]; {read}; uid = student)
rule(position [ {faculty} ]; type [ {roster} ]; {read}; crsTaught ] crs)

===============================================================
ITERATION : 1
===============================================================
rule(position [ {student} ]; type [ {gradebook} ]; {readScore, addScore}; crsTaught ] crs)
rule(position [ {student} ]; type [ {gradebook} ]; {readMyScores}; crsTaken ] crs)
rule(position [ {faculty} ]; type [ {gradebook} ]; {assignGrade, changeScore, addScore, readScore}; crsTaught ] crs)
rule(isChair [ {True} ], department [ {cs} ]; type [ {transcript} ], departments [ {cs} ]; {read}; )
rule(isChair [ {True} ], department [ {ee} ]; type [ {transcript} ], departments [ {ee} ]; {read}; )
rule(position [ {staff} ], department [ {registrar} ]; type [ {roster} ]; {read, write}; )
rule(position [ {staff} ], department [ {registrar} ]; type [ {transcript} ]; {read}; )
rule(position [ {staff} ], department [ {admissions} ]; type [ {application} ]; {setStatus, read, checkStatus}; )
rule(position [ {applicant} ]; type [ {application} ]; {checkStatus}; uid = student)
rule(position [ {student} ]; type [ {application} ]; {checkStatus}; uid = student)
rule(position [ {student} ]; type [ {transcript} ]; {read}; uid = student)
rule(position [ {faculty} ]; type [ {roster} ]; {read}; crsTaught ] crs)

===============================================================
ITERATION : 0
===============================================================
rule(position [ {student} ]; type [ {gradebook} ]; {readScore, addScore}; crsTaught ] crs)
rule(position [ {student} ]; type [ {gradebook} ]; {readMyScores}; crsTaken ] crs)
rule(position [ {faculty} ]; type [ {gradebook} ]; {assignGrade, changeScore, addScore, readScore}; crsTaught ] crs)
rule(isChair [ {True} ], department [ {cs} ]; type [ {transcript} ], departments [ {cs} ]; {read}; )
rule(isChair [ {True} ], department [ {ee} ]; type [ {transcript} ], departments [ {ee} ]; {read}; )
rule(position [ {staff} ], department [ {registrar} ]; type [ {roster} ]; {read, write}; )
rule(position [ {staff} ], department [ {registrar} ]; type [ {transcript} ]; {read}; )
rule(position [ {staff} ], department [ {admissions} ]; type [ {application} ]; {setStatus, read, checkStatus}; )
rule(position [ {applicant} ]; type [ {application} ]; {checkStatus}; )
rule(position [ {student} ]; type [ {application} ]; {checkStatus}; )
rule(position [ {student} ]; type [ {transcript} ]; {read}; uid = student)
