
===============================================================
ITERATION : 2
===============================================================
rule(position [ {applicant}, type [ {application}; {checkStatus, read, setStatus}; student = applicant)
rule(position [ {student}, department [ {cs}, type [ {gradebook, roster, transcript, application}; {readMyScores, addScore, readScore}; crs [ {cs101, cs601, cs602} )
rule(position [ {student}, department [ {ee}, type [ {gradebook, roster, transcript, application}; {readMyScores, addScore, readScore}; crs [ {ee101, ee601, ee602} )
rule(position [ {faculty}, department [ {cs}, type [ {gradebook, roster}; {assignGrade, changeScore, addScore, readScore}; crs [ {cs101, cs601, cs602} )
rule(position [ {faculty}, department [ {ee}, type [ {gradebook, roster}; {assignGrade, changeScore, addScore, readScore}; crs [ {ee101, ee601, ee602} )
rule(position [ {staff}, department [ {registrar}, type [ {roster, transcript}; {read, write}; departments [ {cs, ee} )
rule(position [ {staff}, department [ {admissions}, type [ {application}; {read, setStatus}; student [ {applicant1, applicant2, csStu1, csStu2, csStu3, csStu4, csStu5, eeStu1, eeStu2, eeStu3, eeStu4, eeStu5} )
rule(position [ {chair}, department [ {cs}, type [ {transcript}; {read}; student [ {csStu1, csStu2, csStu3, csStu4, csStu5} )
rule(position [ {chair}, department [ {ee}, type [ {transcript}; {read}; student [ {eeStu1, eeStu2, eeStu3, eeStu4, eeStu5} )

===============================================================
ITERATION : 1
===============================================================
rule(position [ {applicant}, type [ {application}; {checkStatus, read, setStatus}; student = applicant)
rule(position [ {student}, department [ {cs}, type [ {gradebook, roster, transcript, application}; {readMyScores, addScore, readScore}; crs [ {cs101, cs601, cs602} )
rule(position [ {student}, department [ {ee}, type [ {gradebook, roster, transcript, application}; {readMyScores, addScore, readScore}; crs [ {ee101, ee601, ee602} )
rule(position [ {faculty}, department [ {cs}, type [ {gradebook, roster}; {assignGrade, changeScore, addScore, readScore}; crs [ {cs101, cs601, cs602} )
rule(position [ {faculty}, department [ {ee}, type [ {gradebook, roster}; {assignGrade, changeScore, addScore, readScore}; crs [ {ee101, ee601, ee602} )
rule(position [ {staff}, department [ {registrar}, type [ {roster, transcript}; {read, write}; departments [ {cs, ee} )
rule(position [ {staff}, department [ {admissions}, type [ {application}; {read, setStatus}; student [ {applicant1, applicant2, csStu1, csStu2, csStu3, csStu4, csStu5, eeStu1, eeStu2, eeStu3, eeStu4, eeStu5} )
rule(position [ {chair}, department [ {cs}, type [ {transcript}; {read}; student [ {csStu1, csStu2, csStu3, csStu4, csStu5} )
rule(position [ {chair}, department [ {ee}, type [ {transcript}; {read}; student [ {eeStu1, eeStu2, eeStu3, eeStu4, eeStu5} )

===============================================================
ITERATION : 0
===============================================================
