
===============================================================
ITERATION : 2
===============================================================
rule(position [ {applicant}, type [ {application} ; {checkStatus} )
rule(position [ {student}, department [ {cs}, crsTaken ] cs101, type [ {gradebook} ; {readMyScores} )
rule(position [ {student}, department [ {cs}, crsTaught ] cs101, type [ {gradebook} ; {addScore, readScore} )
rule(position [ {faculty}, department [ {cs}, crsTaught ] cs101, type [ {gradebook} ; {assignGrade, changeScore, readScore} )
rule(position [ {staff}, department [ {registrar}, type [ {roster, transcript} ; {read, write} )
rule(position [ {staff}, department [ {admissions}, type [ {application} ; {setStatus, read} )
rule(position [ {student}, department [ {cs}, type [ {transcript} ; {read} )
rule(position [ {chair}, department [ {cs}, type [ {transcript} ; {read} )
rule(position [ {student}, department [ {ee}, crsTaken ] ee101, type [ {gradebook} ; {readMyScores} )
rule(position [ {student}, department [ {ee}, crsTaught ] ee101, type [ {gradebook} ; {addScore, readScore} )
rule(position [ {faculty}, department [ {ee}, crsTaught ] ee101, type [ {gradebook} ; {assignGrade, changeScore, readScore} )
rule(position [ {staff}, department [ {registrar}, type [ {roster, transcript} ; {read, write} )
rule(position [ {staff}, department [ {admissions}, type [ {application} ; {setStatus, read} )
rule(position [ {student}, department [ {ee}, type [ {transcript} ; {read} )
rule(position [ {chair}, department [ {ee}, type [ {transcript} ; {read} )
rule(position [ {student}, crsTaken ] cs101, type [ {gradebook} ; {readMyScores} )
rule(position [ {student}, crsTaught ] cs101, type [ {gradebook} ; {addScore, readScore} )
rule(position [ {faculty}, crsTaught ] cs101, type [ {gradebook} ; {assignGrade, changeScore, readScore} )
rule(position [ {staff}, department [ {registrar}, type [ {roster, transcript} ; {read, write} )
rule(position [ {student}, type [ {transcript} ; {read} )
rule(position [ {chair}, type [ {transcript} ; {read} )
rule(department [ {cs}, type [ {gradebook} ; {assignGrade, changeScore, readScore} )
rule(department [ {ee}, type [ {gradebook} ; {assignGrade, changeScore, readScore} )
rule(position [ {student}, department [ {cs}, crsTaken ] cs602, type [ {gradebook} ; {readMyScores} )
rule(position [ {student}, department [ {ee}, crsTaken ] ee602, type [ {gradebook} ; {readMyScores} )
rule(position [ {staff}, department [ {admissions}, type [ {application} ; {setStatus} )
rule(position [ {staff}, department [ {registrar}, type [ {roster} ; {write} )
rule(position [ {staff}, department [ {registrar}, type [ {transcript} ; {read} )
rule(position [ {student}, crsTaken ] cs601, type [ {gradebook} ; {readMyScores} )
rule(position [ {student}, crsTaken ] ee601, type [ {gradebook} ; {readMyScores} )
rule(position [ {staff}, department [ {registrar}, type [ {roster} ; {read} )

===============================================================
ITERATION : 1
===============================================================
rule(position [ {applicant}, type [ {application} ; {checkStatus} )
rule(position [ {student}, department [ {cs}, crsTaken ] cs101, type [ {gradebook} ; {readMyScores} )
rule(position [ {student}, department [ {cs}, crsTaught ] cs101, type [ {gradebook} ; {addScore, readScore} )
rule(position [ {faculty}, department [ {cs}, crsTaught ] cs101, type [ {gradebook} ; {assignGrade, changeScore, readScore} )
rule(position [ {staff}, department [ {registrar}, type [ {roster, transcript} ; {read, write} )
rule(position [ {staff}, department [ {admissions}, type [ {application} ; {setStatus, read} )
rule(position [ {student}, department [ {cs}, type [ {transcript} ; {read} )
rule(position [ {chair}, department [ {cs}, type [ {transcript} ; {read} )
rule(position [ {student}, department [ {ee}, crsTaken ] ee101, type [ {gradebook} ; {readMyScores} )
rule(position [ {student}, department [ {ee}, crsTaught ] ee101, type [ {gradebook} ; {addScore, readScore} )
rule(position [ {faculty}, department [ {ee}, crsTaught ] ee101, type [ {gradebook} ; {assignGrade, changeScore, readScore} )
rule(position [ {staff}, department [ {registrar}, type [ {roster, transcript} ; {read, write} )
rule(position [ {staff}, department [ {admissions}, type [ {application} ; {setStatus, read} )
rule(position [ {student}, department [ {ee}, type [ {transcript} ; {read} )
rule(position [ {chair}, department [ {ee}, type [ {transcript} ; {read} )

===============================================================
ITERATION : 0
===============================================================
