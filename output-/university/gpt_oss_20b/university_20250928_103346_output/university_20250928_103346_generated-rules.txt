
===============================================================
ITERATION : 2
===============================================================
rule(position=[staff]; department=[admissions]; type=[application]; {read, setStatus}; )
rule(position=[applicant]; type=[application]; {checkStatus}; uid = student)
rule(position=[student]; type=[transcript]; {read}; uid = student)
rule(position=[student]; type=[application]; {checkStatus}; uid = student)
rule(position=[faculty]; crsTaught] crs; type=[gradebook]; {assignGrade, addScore, changeScore, readScore}; )
rule(position=[faculty]; crsTaught] crs; type=[roster]; {read}; )
rule(isChair=[True]; type=[transcript]; {read}; )
rule(position=[staff]; department=[registrar]; type=[roster]; {read, write}; )
rule(position=[staff]; department=[registrar]; type=[transcript]; {read}; )
rule(position=[student]; uid=csStu1; crsTaken] cs101; type=[gradebook]; {readScore}; )
rule(position=[student]; uid=csStu2; crsTaken] cs101; type=[gradebook]; {readScore}; )
rule(position=[student]; uid=csStu5; crsTaken] cs101; type=[gradebook]; {readScore}; )
rule(position=[student]; uid=csStu2; crsTaken] cs602; type=[gradebook]; {readScore}; )
rule(position=[student]; uid=csStu3; crsTaken] cs602; type=[gradebook]; {readScore}; )
rule(position=[student]; uid=csStu5; crsTaken] cs602; type=[gradebook]; {readScore}; )
rule(position=[student]; uid=csStu3; crsTaken] cs601; type=[gradebook]; {readScore}; )
rule(position=[student]; uid=csStu4; crsTaken] cs601; type=[gradebook]; {readScore}; )
rule(position=[student]; uid=csStu5; crsTaken] cs601; type=[gradebook]; {readScore}; )
rule(position=[student]; uid=csStu2; crsTaken] cs601; type=[gradebook]; {readMyScores}; )
rule(position=[student]; uid=csStu3; crsTaken] cs602; type=[gradebook]; {readMyScores}; )
rule(position=[student]; uid=csStu4; crsTaken] cs601; type=[gradebook]; {readMyScores}; )
rule(position=[student]; uid=csStu5; crsTaken] cs601; type=[gradebook]; {readMyScores}; )
rule(position=[student]; uid=csStu5; crsTaken] cs602; type=[gradebook]; {readMyScores}; )
rule(position=[student]; uid=csStu2; crsTaught] cs602; type=[gradebook]; {addScore}; )
rule(position=[student]; uid=csStu3; crsTaught] cs601; type=[gradebook]; {addScore}; )

===============================================================
ITERATION : 1
===============================================================
rule(position=[staff], department=[admissions]; type=[application]; {read, setStatus}; )
rule(position=[applicant]; type=[application]; {checkStatus}; uid = student)
rule(position=[staff], department=[registrar]; type=[roster]; {read, write}; )
rule(position=[staff], department=[registrar]; type=[transcript]; {read}; )
rule(isChair=[True]; type=[transcript]; {read}; )
rule(position=[student]; type=[transcript]; {read}; uid = student)
rule(position=[student]; type=[application]; {checkStatus}; uid = student)
rule(position=[faculty], crsTaught ] crs; type=[gradebook]; {assignGrade, addScore, changeScore, readScore}; )
rule(position=[faculty], crsTaught ] cs601; crs=cs601; type=[roster]; {read}; )
rule(position=[student], crsTaught ] cs101; crs=cs101; type=[gradebook]; {addScore}; )
rule(position=[student], crsTaught ] cs602; crs=cs602; type=[gradebook]; {addScore}; )
rule(position=[student]; crsTaken ] crs; type=[gradebook]; {readMyScores}; )
rule(position=[student], crsTaught ] cs101; crs=cs101; type=[gradebook]; {readScore}; )
rule(position=[student], crsTaught ] cs602; crs=cs602; type=[gradebook]; {readScore}; )
rule(position=[student], crsTaught ] cs601; crs=cs601; type=[gradebook]; {readScore}; )

===============================================================
ITERATION : 0
===============================================================
rule()
