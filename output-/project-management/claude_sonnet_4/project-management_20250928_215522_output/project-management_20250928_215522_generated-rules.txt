
===============================================================
ITERATION : 2
===============================================================
rule(adminRoles ] planner; type [ {schedule}; {read}; project [ projects)
rule(adminRoles ] accountant; type [ {schedule}; {read}; project [ projects)
rule(adminRoles ] auditor; type [ {schedule}; {read}; project [ projects)
rule(projectsLed ] project; type [ {schedule budget}; {read write}; )
rule(expertise ] expertise; type [ {task}; {read}; project [ projects)
rule(expertise ] expertise, isEmployee [ {True}; type [ {task}, proprietary [ {True}; {read}; project [ projects)
rule(tasks ] rid; ; {read setStatus request}; )
rule(expertise ] expertise, project [ projects; type [ {task}, proprietary [ {False}; {request}; )
rule(expertise ] expertise, isEmployee [ {True}, project [ projects; type [ {task}, proprietary [ {True}; {request}; )
===============================================================
ITERATION : 1
===============================================================
rule(adminRoles ] planner; type [ {schedule}; {read}; project [ projects)
rule(adminRoles ] accountant; type [ {schedule}; {read}; project [ projects)
rule(adminRoles ] auditor; type [ {schedule}; {read}; project [ projects)
rule(projectsLed ] project; type [ {schedule budget}; {read write}; )
rule(expertise ] expertise; type [ {task}; {read}; project [ projects)
rule(expertise ] expertise, isEmployee [ {True}; type [ {task}, proprietary [ {True}; {read}; project [ projects)
rule(tasks ] rid; ; {read setStatus request}; )
rule(expertise ] expertise, project [ projects; type [ {task}, proprietary [ {False}; {request}; )
rule(expertise ] expertise, isEmployee [ {True}, project [ projects; type [ {task}, proprietary [ {True}; {request}; )
===============================================================
ITERATION : 0
===============================================================
rule(adminRoles ] planner; type [ {schedule}; {read}; project [ projects)
rule(adminRoles ] accountant; type [ {schedule}; {read}; project [ projects)
rule(adminRoles ] auditor; type [ {schedule}; {read}; project [ projects)
rule(adminRoles ] manager; type [ {schedule budget}; {read}; department = department)
rule(projectsLed ] project; type [ {schedule budget}; {read write}; )
rule(expertise ] expertise; type [ {task}; {read}; project [ projects)
rule(expertise ] expertise, isEmployee [ {True}; type [ {task}, proprietary [ {True}; {read}; project [ projects)
rule(tasks ] rid; ; {read setStatus request}; )
rule(expertise ] expertise, project [ projects; type [ {task}, proprietary [ {False}; {request}; )
rule(expertise ] expertise, isEmployee [ {True}, project [ projects; type [ {task}, proprietary [ {True}; {request}; )