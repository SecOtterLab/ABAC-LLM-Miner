
===============================================================
ITERATION : 2
===============================================================
rule(adminRoles ] accountant; type [ {schedule}; {read}; projects ] project)
rule(adminRoles ] auditor; type [ {schedule}; {read}; projects ] project)
rule(adminRoles ] planner; type [ {schedule}; {read}; projects ] project)
rule(projectsLed ] project; type [ {budget schedule}; {read write}; )
rule(projects ] project; type [ {schedule}; {read}; )
rule(expertise > expertise, projects ] project; type [ {task}; {read}; )
rule(expertise > expertise, tasks ] rid; type [ {task}; {read setStatus request}; )
rule(expertise > expertise, projects ] project, isEmployee [ {True}; type [ {task}, proprietary [ {True}; {read setStatus request}; )
rule(expertise > expertise, projects ] project, isEmployee [ {False}; type [ {task}, proprietary [ {False}; {read setStatus request}; )
===============================================================
ITERATION : 1
===============================================================
rule(adminRoles ] accountant; type [ {schedule}; {read}; projects ] project)
rule(adminRoles ] auditor; type [ {schedule}; {read}; projects ] project)
rule(adminRoles ] planner; type [ {schedule}; {read}; projects ] project)
rule(adminRoles ] manager; type [ {budget schedule}; {read write}; department = department)
rule(projectsLed ] project; type [ {budget schedule}; {read write}; )
rule(projects ] project; type [ {schedule}; {read}; )
rule(expertise > expertise, projects ] project; type [ {task}; {read}; )
rule(expertise > expertise, tasks ] rid; type [ {task}; {read setStatus request}; )
rule(expertise > expertise, projects ] project, isEmployee [ {True}; type [ {task}, proprietary [ {True}; {read setStatus request}; )
rule(expertise > expertise, projects ] project, isEmployee [ {False}; type [ {task}, proprietary [ {False}; {read setStatus request}; )
===============================================================
ITERATION : 0
===============================================================
rule(adminRoles ] accountant; type [ {budget schedule}; {read}; projects ] project)
rule(adminRoles ] auditor; type [ {budget schedule}; {read}; projects ] project)
rule(adminRoles ] planner; type [ {schedule}; {read}; projects ] project)
rule(adminRoles ] manager; type [ {budget schedule}; {read write}; adminRoles ] manager, department = department)
rule(projectsLed ] project; type [ {budget schedule}; {read write}; )
rule(projects ] project; type [ {schedule}; {read}; )
rule(expertise > expertise, projects ] project; type [ {task}; {read}; )
rule(expertise > expertise, tasks ] rid; type [ {task}; {read setStatus request}; )
rule(expertise > expertise, projects ] project, isEmployee [ {True}; type [ {task}, proprietary [ {True}; {read setStatus request}; )
rule(expertise > expertise, projects ] project, isEmployee [ {False}; type [ {task}, proprietary [ {False}; {read setStatus request}; )