
===============================================================
ITERATION : 2
===============================================================
rule(adminRoles={accountant, auditor}; type={schedule}, project={proj11, proj12, proj21, proj22}; {read})
rule(adminRoles={planner}; type={schedule}, project={proj11, proj12}; {read})
rule(department=dept1; type={budget, schedule}; adminRoles={manager}; {write, read})
rule(projectsLed={proj11, proj12}; type={task, budget, schedule}; {read, request, setStatus})
rule(expertise={design}; type={task}, expertise={design}, proprietary=False; isEmployee=True; {read, request, setStatus})
rule(expertise={coding}; type={task}, expertise={coding}, proprietary=False; isEmployee=True; {read, request, setStatus})

===============================================================
ITERATION : 1
===============================================================
rule(adminRoles={accountant}; type={schedule}, project={proj11, proj12}; {read})
rule(adminRoles={auditor}; type={schedule}, project={proj21, proj22}; {read})
rule(adminRoles={planner}; type={schedule}, project={proj11, proj12}; {read})
rule(adminRoles={manager}; type={budget, schedule}, department=dept2; {write, read})
rule(projectsLed={proj11, proj12}; type={task, budget, schedule}; {read, request, setStatus})
rule(expertise={design, coding}; type={task}, expertise={design, coding}, proprietary=False; {read, request, setStatus})
rule(isEmployee=True; type={task}, proprietary=True; {read, request, setStatus})

===============================================================
ITERATION : 0
===============================================================
rule(adminRoles={accountant}; type={schedule}, department=dept1; {read})
rule(adminRoles={auditor}; type={schedule}, department=dept2; {read})
rule(adminRoles={planner}; type={schedule}, department=dept1; {read})
rule(adminRoles={manager}; type={budget,schedule}, department=dept2; {write,read})
rule(projectsLed={proj11, proj12}; type={task,budget,schedule}; {read,request,setStatus})
rule(expertise={design,coding}; type={task}, expertise={design,coding}, proprietary=False; {read,request,setStatus})
rule(isEmployee=True; type={task}, proprietary=True; {read,request,setStatus})
