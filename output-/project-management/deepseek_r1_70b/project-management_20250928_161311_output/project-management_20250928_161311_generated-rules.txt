
===============================================================
ITERATION : 2
===============================================================
rule(adminRoles [ {planner}, department [ {dept1} ], projects [ {proj11, proj12} ]; type [ {schedule} ], project [ {proj11, proj12} ]; read)
rule(adminRoles [ {planner}, department [ {dept2} ], projects [ {proj21, proj22} ]; type [ {schedule} ], project [ {proj21, proj22} ]; read)
rule(adminRoles [ {auditor}, department [ {dept1} ], projects [ {proj11, proj12} ]; type [ {schedule} ], project [ {proj11, proj12} ]; read)
rule(adminRoles [ {auditor}, department [ {dept2} ], projects [ {proj21, proj22} ]; type [ {schedule} ], project [ {proj21, proj22} ]; read)
rule(adminRoles [ {accountant}, department [ {dept1} ], projects [ {proj11, proj12} ]; type [ {schedule} ], project [ {proj11, proj12} ]; read)
rule(adminRoles [ {accountant}, department [ {dept2} ], projects [ {proj21, proj22} ]; type [ {schedule} ], project [ {proj21, proj22} ]; read)
rule(department [ {dept1}, adminRoles [ {manager} ]; type [ {budget, schedule} ], project [ {proj11, proj12} ]; write)
rule(department [ {dept2}, adminRoles [ {manager} ]; type [ {budget, schedule} ], project [ {proj21, proj22} ]; write)
rule(expertise [ {design}, isEmployee [ {True, False} ], projects [ {proj11, proj12, proj21, proj22} ]; type [ {task} ], project [ {proj11, proj12, proj21, proj22}, expertise [ {design}, proprietary [ {False} ]; read)
rule(expertise [ {coding}, isEmployee [ {True, False} ], projects [ {proj11, proj12, proj21, proj22} ]; type [ {task} ], project [ {proj11, proj12, proj21, proj22}, expertise [ {coding}, proprietary [ {False} ]; read)
rule(expertise [ {design}, isEmployee [ {True} ], projects [ {proj11, proj12, proj21, proj22} ]; type [ {task} ], project [ {proj11, proj12, proj21, proj22}, expertise [ {design}, proprietary [ {True} ]; read)
rule(expertise [ {coding}, isEmployee [ {True} ], projects [ {proj11, proj12, proj21, proj22} ]; type [ {task} ], project [ {proj11, proj12, proj21, proj22}, expertise [ {coding}, proprietary [ {True} ]; read)
rule(expertise [ {design}, isEmployee [ {False} ], projects [ {proj11, proj12, proj21, proj22} ]; type [ {task} ], project [ {proj11, proj12, proj21, proj22}, expertise [ {design}, proprietary [ {True} ]; setStatus)
rule(expertise [ {coding}, isEmployee [ {False} ], projects [ {proj11, proj12, proj21, proj22} ]; type [ {task} ], project [ {proj11, proj12, proj21, proj22}, expertise [ {coding}, proprietary [ {True} ]; setStatus)
rule(adminRoles [ {projectLeader}, department [ {dept1} ], projectsLed [ {proj11, proj12} ]; type [ {budget, schedule} ], project [ {proj11, proj12} ]; write)
rule(adminRoles [ {projectLeader}, department [ {dept2} ], projectsLed [ {proj21, proj22} ]; type [ {budget, schedule} ], project [ {proj21, proj22} ]; write)

===============================================================
ITERATION : 1
===============================================================
rule(adminRoles [ {planner}, projects [ {proj11, proj12, proj21, proj22} ]; type [ {schedule}, project [ {proj11, proj12, proj21, proj22} ]; read)
rule(adminRoles [ {auditor}, projects [ {proj11, proj12, proj21, proj22} ]; type [ {schedule}, project [ {proj11, proj12, proj21, proj22} ]; read)
rule(adminRoles [ {accountant}, projects [ {proj11, proj12, proj21, proj22} ]; type [ {schedule}, project [ {proj11, proj12, proj21, proj22} ]; read)
rule(expertise [ {design}, isEmployee [ {True, False}, projects [ {proj11, proj12, proj21, proj22} ]; type [ {task}, project [ {proj11, proj12, proj21, proj22}, expertise [ {design}, proprietary [ {False} ]; read)
rule(expertise [ {coding}, isEmployee [ {True, False}, projects [ {proj11, proj12, proj21, proj22} ]; type [ {task}, project [ {proj11, proj12, proj21, proj22}, expertise [ {coding}, proprietary [ {False} ]; read)
rule(adminRoles [ {projectLeader}, department [ {dept1, dept2} ], projectsLed [ {proj11, proj12, proj21, proj22} ]; type [ {budget, schedule}, project [ {proj11, proj12, proj21, proj22} ]; write)
rule(isEmployee [ {True}, expertise [ {coding}, projects [ {proj11, proj12, proj21, proj22} ]; type [ {task}, project [ {proj11, proj12, proj21, proj22}, expertise [ {coding}, proprietary [ {True} ]; setStatus)
rule(expertise [ {design}, isEmployee [ {False}, projects [ {proj11, proj12, proj21, proj22} ]; type [ {task}, project [ {proj11, proj12, proj21, proj22}, expertise [ {design}, proprietary [ {True} ]; setStatus)
rule(adminRoles [ {projectLeader}, department [ {dept1, dept2} ], projectsLed [ {proj11, proj12, proj21, proj22} ]; type [ {schedule}, project [ {proj11, proj12, proj21, proj22} ]; read)
rule(expertise [ {design}, isEmployee [ {False}, projects [ {proj11, proj12, proj21, proj22} ]; type [ {task}, project [ {proj11, proj12, proj21, proj22}, expertise [ {design}, proprietary [ {False} ]; read)
rule(isEmployee [ {True}, expertise [ {coding}, projects [ {proj11, proj12, proj21, proj22} ]; type [ {task}, project [ {proj11, proj12, proj21, proj22}, expertise [ {coding}, proprietary [ {True} ]; read)
rule(expertise [ {design}, isEmployee [ {True}, projects [ {proj11, proj12, proj21, proj22} ]; type [ {task}, project [ {proj11, proj12, proj21, proj22}, expertise [ {design}, proprietary [ {False} ]; request)
rule(isEmployee [ {True}, expertise [ {coding}, projects [ {proj11, proj12, proj21, proj22} ]; type [ {task}, project [ {proj11, proj12, proj21, proj22}, expertise [ {coding}, proprietary [ {True} ]; request)

===============================================================
ITERATION : 0
===============================================================
rule(adminRoles [ {planner}, projects [ {proj12} ]; type [ {schedule}, project [ {proj12} ]; read)
rule(expertise [ {coding}, isEmployee [ {True}, projects [ {proj21} ]; type [ {task}, project [ {proj21}, expertise [ {coding}, proprietary [ {True} ]; read)
rule(adminRoles [ {projectLeader}, projects [ {proj11} ], department [ {dept1} ]; type [ {budget}, project [ {proj11} ]; write)
rule(isEmployee [ {True}, expertise [ {coding}, projects [ {proj21} ]; type [ {task}, project [ {proj21}, expertise [ {coding}, proprietary [ {True} ]; setStatus)
rule(adminRoles [ {planner}, projects [ {proj22} ]; type [ {schedule}, project [ {proj22} ]; read)
rule(expertise [ {design}, isEmployee [ {False}, projects [ {proj22} ]; type [ {task}, project [ {proj22}, expertise [ {design}, proprietary [ {False} ]; read)
rule(isEmployee [ {False}, expertise [ {design}, projects [ {proj22} ]; type [ {task}, project [ {proj22}, expertise [ {design}, proprietary [ {True} ]; setStatus)
rule(adminRoles [ {projectLeader}, department [ {dept1} ], projectsLed [ {proj12} ]; type [ {schedule}, project [ {proj12} ]; read)
rule(expertise [ {design}, isEmployee [ {False}, projects [ {proj12} ]; type [ {task}, project [ {proj12}, expertise [ {design}, proprietary [ {False} ]; read)
rule(isEmployee [ {True}, expertise [ {coding}, projects [ {proj21} ]; type [ {task}, project [ {proj21}, expertise [ {coding}, proprietary [ {True} ]; read)
rule(adminRoles [ {projectLeader}, department [ {dept1} ], projectsLed [ {proj11} ]; type [ {schedule}, project [ {proj11} ]; write)
rule(expertise [ {design}, isEmployee [ {False}, projects [ {proj22} ]; type [ {task}, project [ {proj22}, expertise [ {design}, proprietary [ {False} ]; read)
rule(adminRoles [ {accountant}, projects [ {proj22} ]; type [ {schedule}, project [ {proj22} ]; read)
rule(isEmployee [ {False}, expertise [ {coding}, projects [ {proj22} ]; type [ {task}, project [ {proj22}, expertise [ {coding}, proprietary [ {False} ]; read)
rule(expertise [ {design}, isEmployee [ {True}, projects [ {proj11} ]; type [ {task}, project [ {proj11}, expertise [ {design}, proprietary [ {False} ]; request)
rule(isEmployee [ {True}, expertise [ {coding}, projects [ {proj21} ]; type [ {task}, project [ {proj21}, expertise [ {coding}, proprietary [ {True} ]; request)
rule(expertise [ {coding}, isEmployee [ {True}, projects [ {proj11} ]; type [ {task}, project [ {proj11}, expertise [ {coding}, proprietary [ {True} ]; setStatus)
rule(isEmployee [ {False}, expertise [ {design}, projects [ {proj12} ]; type [ {task}, project [ {proj12}, expertise [ {design}, proprietary [ {True} ]; setStatus)
rule(isEmployee [ {True}, expertise [ {coding}, projects [ {proj21} ]; type [ {task}, project [ {proj21}, expertise [ {coding}, proprietary [ {False} ]; read)
rule(expertise [ {design}, isEmployee [ {True}, projects [ {proj11} ]; type [ {task}, project [ {proj11}, expertise [ {design}, proprietary [ {False} ]; request)
