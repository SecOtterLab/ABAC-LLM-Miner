
===============================================================
ITERATION : 2
===============================================================

===============================================================
ITERATION : 1
===============================================================

===============================================================
ITERATION : 0
===============================================================
rule(position [ {technician}; type [ {task}, department [ {workforce}; {view}; certifications > requiredCertifications)
rule(position [ {technician}; type [ {task}, department [ {workforce}; {complete}; uid = assignedTechnician)
rule(position [ {workforceManager}; type [ {task}, department [ {workforce}; {view}; assignedTenant = tenant)
rule(position [ {workforceManager}; type [ {task}, department [ {workforce}; {complete}; assignedTenant = tenant)
rule(position [ {helpdeskOperator}; type [ {workOrder}, department [ {workforce}; {modify delete}; assignedTenant = tenant)
rule(position [ {helpdeskOperator}; type [ {contract}, department [ {workforce}; {createOneTimeWorkOrder createRecurrentWorkOrder}; assignedTenant = tenant)
rule(position [ {helpdeskManager}; type [ {workOrder}, department [ {workforce}; {view}; assignedTenant = tenant)
rule(position [ {maintenanceManager}; type [ {contract}, department [ {workforce}; {createOneTimeWorkOrder createRecurrentWorkOrder}; assignedTenant = tenant)
rule(position [ {applicationAdmin}; type [ {contract}, department [ {workforce}; {createAppointment}; )
rule(position [ {applicationAdmin}; type [ {workOrder}, department [ {workforce}; {modify delete}; )
rule(position [ {warehouseOperator warehouseManager}; type [ {resourceRequest}, department [ {warehouse}; {view complete}; uid = assignedEmployee)
rule(position [ {warehouseOperator warehouseManager}; type [ {stockRefillRequest}, department [ {warehouse}; {markComplete}; uid = assignedEmployee)
rule(position [ {salesManager}; type [ {stockRefillRequest}, department [ {warehouse}; {receive}; assignedTenant = tenant)
