
===============================================================
ITERATION : 2
===============================================================

===============================================================
ITERATION : 1
===============================================================

===============================================================
ITERATION : 0
===============================================================
rule(position [ {applicationAdmin}; ; {view modify delete createOneTimeWorkOrder createRecurrentWorkOrder createAppointment markComplete complete}; )
rule(position [ {workforceManager}; type [ {task}; {view complete}; assignedTechnician [ managedStaff)
rule(position [ {workforceManager}; type [ {workOrder}; {view modify delete}; assignedTechnician [ managedStaff)
rule(position [ {workforceManager}, assignedTenant = tenant; type [ {contract}; {createOneTimeWorkOrder createRecurrentWorkOrder}; )
rule(position [ {technician}; type [ {task}; {view complete}; assignedTechnician = uid)
rule(position [ {helpdeskManager}; type [ {workOrder}; {view}; tenant = assignedTenant)
rule(position [ {helpdeskOperator}, assignedTenant = tenant; type [ {contract}; {createOneTimeWorkOrder createRecurrentWorkOrder}; )
rule(position [ {helpdeskOperator}; type [ {workOrder}; {modify delete}; createdBy = uid)
rule(position [ {warehouseManager}; type [ {stockRefillRequest}; {markComplete}; assignedEmployee [ managedStaff)
rule(position [ {warehouseOperator}; type [ {resourceRequest}; {view complete}; assignedEmployee = uid)
rule(position [ {salesManager}, assignedTenant = tenant; type [ {contract}; {createOneTimeWorkOrder createRecurrentWorkOrder}; )
rule(position [ {salesManager}; type [ {workOrder stockRefillRequest}; {view receive}; tenant = assignedTenant)
rule(position [ {maintenanceManager}, assignedTenant = tenant; type [ {contract}; {createOneTimeWorkOrder createRecurrentWorkOrder}; )
rule(position [ {maintenanceManager}; type [ {workOrder}; {view}; tenant = assignedTenant)