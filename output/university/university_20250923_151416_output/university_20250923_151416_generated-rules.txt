
===============================================================
ITERATION : 1
===============================================================
rule(position [ {registrar}; type [ {transcript}; acts={read}; departments = departments)
rule(position [ {csChair}; type [ {transcript}; acts={read}; departments = departments)
rule(position [ {admissions}; type [ {application}; acts={read,setStatus}; student = student)
rule(position [ {faculty}, crsTaught ] crs; type [ {gradebook}; acts={readScore,addScore,changeScore,assignGrade}; departments = departments, crs = crs)
rule(position [ {student}, crsTaken ] crs; type [ {gradebook}; acts={readScore,readMyScores}; departments = departments, crs = crs)
rule(position [ {faculty}; type [ {roster}; acts={read,write}; departments = departments, crs = crs)
rule(position [ {staff}; type [ {roster}; acts={read,write}; departments = departments, crs = crs, department = registrar)
rule(position [ {student}; type [ {application}; acts={checkStatus}; student = uid)
rule(position [ {applicant}; type [ {application}; acts={checkStatus}; student = uid)
rule(position [ {student}; type [ {transcript}; acts={read}; departments = departments, student = student)
rule(position [ {faculty}, isChair [ {True}; type [ {transcript}; acts={read}; departments = departments)

===============================================================
ITERATION : 0
===============================================================
rule(position [ {registrar}; student = student, type [ {transcript}, departments ] departments; {read};)
rule(position [ {csChair}; student = student, type [ {transcript}, departments ] departments, department [ {cs}; {read};)
rule(position [ {eeChair}; student = student, type [ {transcript}, departments ] departments, department [ {ee}; {read};)
rule(position [ {student}; student = uid, type [ {transcript}; {read};)
rule(position [ {student}; student = uid, type [ {application}; {checkStatus};)
rule(position [ {faculty}; crsTaught ] crs, type [ {gradebook}; {addScore, changeScore, assignGrade, readScore};)
rule(position [ {faculty}; crsTaught ] crs, type [ {roster}; {read};)
rule(position [ {staff}, department [ {registrar}; type [ {roster}; {read, write};)
rule(position [ {staff}, department [ {admissions}; type [ {application}; {read, setStatus};)
rule(position [ {student}; crsTaken ] crs, type [ {gradebook}; {readScore, readMyScores};)
rule(position [ {applicant}; type [ {application}; {checkStatus};)
